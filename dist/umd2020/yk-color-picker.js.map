{"version":3,"file":"yk-color-picker.js","sources":["../../src/utility.ts","../../src/yk-color-parser.ts","../../src/yk-color.ts","../../src/yk-color-picker.ts"],"sourcesContent":["export function hexPad2(value: number) {\r\n  return value.toString(16).padStart(2, \"0\");\r\n}\r\n\r\nexport function createElement(\r\n  tag: string,\r\n  classList: string[],\r\n  attributes?: any\r\n) {\r\n  const el = document.createElement(tag);\r\n  if (classList != null) {\r\n    el.classList.add(...classList);\r\n  }\r\n  if (attributes) {\r\n    for (const key in attributes) {\r\n      if (Object.prototype.hasOwnProperty.call(attributes, key)) {\r\n        el.setAttribute(key, attributes[key]);\r\n      }\r\n    }\r\n  }\r\n  return el;\r\n}\r\n\r\nexport function attachEvent(\r\n  element: HTMLElement | Window | Document,\r\n  eventName: string,\r\n  eventHandler: any\r\n) {\r\n  element.addEventListener(eventName, eventHandler);\r\n}\r\n\r\nexport function roundToRange(value: number, min: number, max: number) {\r\n  return Math.min(Math.max(Math.round(value), min), max);\r\n}\r\n\r\nexport default {\r\n  hexPad2,\r\n  createElement,\r\n  attachEvent,\r\n};\r\n","import { hexPad2, roundToRange } from \"./utility\";\r\n\r\n/**\r\n * Color Parser\r\n */\r\nexport const YKColorParser = {\r\n  parse: function (color: string) {\r\n    if (color == undefined) {\r\n      throw new Error(\"YKColorParser:: color is undefined\");\r\n    }\r\n\r\n    if (typeof color == \"string\") {\r\n      color = color.trim();\r\n\r\n      if (/^(rgba?)/i.test(color)) {\r\n        return this.compileRGB(color);\r\n      }\r\n      if (/^(#)/i.test(color)) {\r\n        return this.compileHEX(color);\r\n      }\r\n      let rgb: string | undefined = this.getNamedColor(color.toLowerCase());\r\n      if (rgb != undefined) {\r\n        const _rgb = rgb.split(\" \");\r\n        const { h, s, v } = YKColorParser.RGBtoHSV(\r\n          parseInt(_rgb[0]),\r\n          parseInt(_rgb[1]),\r\n          parseInt(_rgb[2])\r\n        );\r\n        return { h, s, v, a: 1 };\r\n      }\r\n    } else {\r\n      const { r, g, b, a } = color;\r\n      if (\r\n        r >= 0 &&\r\n        r <= 255 &&\r\n        g >= 0 &&\r\n        g <= 255 &&\r\n        b >= 0 &&\r\n        b <= 255 &&\r\n        a >= 0 &&\r\n        a <= 1\r\n      ) {\r\n        const { h, s, v } = YKColorParser.RGBtoHSV(r, g, b);\r\n        return { h, s, v, a };\r\n      }\r\n      throw new Error(\r\n        \"YKColorParser:: The provided RGB object has invalid values, please make sure red, green, blue are between 0 and 255 and alpha value is between 0 and 1\"\r\n      );\r\n    }\r\n\r\n    throw new Error(\r\n      \"YKColorParser:: Color is not in RGB or HEX format or a named color\"\r\n    );\r\n  },\r\n\r\n  compileRGB: function (color: string) {\r\n    let r, g, b, a;\r\n\r\n    const regexRGB =\r\n      /rgba?\\(\\s*(\\d+)\\s+(\\d+)\\s+(\\d+)\\s*(\\s+(0?(\\.\\d+)?|1(\\.0*)?)\\s*)?\\)/i;\r\n\r\n    if (regexRGB.test(color)) {\r\n      const splitColor = color\r\n        .split(regexRGB)\r\n        .filter((i) => !isNaN(parseInt(i)) && i != \"\" && i != null);\r\n      r = parseInt(splitColor[0]);\r\n      g = parseInt(splitColor[1]);\r\n      b = parseInt(splitColor[2]);\r\n      a = parseFloat(splitColor[3]);\r\n\r\n      if (r > 255) {\r\n        throw new RangeError(\r\n          `YKColorParser:: '${color}' --> ${r} has an invalid red color, it must be an interger between 0 and 255`\r\n        );\r\n      }\r\n      if (g > 255) {\r\n        throw new RangeError(\r\n          `YKColorParser:: '${color}' --> ${g} has an invalid green color, it must be an interger between 0 and 255`\r\n        );\r\n      }\r\n      if (b > 255) {\r\n        throw new RangeError(\r\n          `YKColorParser:: '${color}' --> ${b} has an invalid blue color, it must be an interger between 0 and 255`\r\n        );\r\n      }\r\n\r\n      const { h, s, v } = YKColorParser.RGBtoHSV(r, g, b);\r\n      return { h, s, v, a: isNaN(a) ? 1 : a };\r\n    }\r\n\r\n    throw new SyntaxError(\r\n      `YKColorParser:: '${color}' is an invalid RGB format`\r\n    );\r\n  },\r\n\r\n  compileHEX: function (color: string) {\r\n    const rgb = YKColorParser.HEXtoRGBA(color);\r\n    if (rgb) {\r\n      const { r, g, b, a } = rgb;\r\n      const { h, s, v } = YKColorParser.RGBtoHSV(r, g, b);\r\n      return { h, s, v, a };\r\n    }\r\n    throw new Error(`YKColorParser:: '${color}' is an invalid HEX format`);\r\n  },\r\n\r\n  RGBtoHSV: function (r: number, g: number, b: number) {\r\n    (r /= 255), (g /= 255), (b /= 255);\r\n\r\n    let max = Math.max(r, g, b),\r\n      min = Math.min(r, g, b);\r\n    let h = 0,\r\n      s = 0,\r\n      v = max;\r\n\r\n    let d = max - min;\r\n    s = max == 0 ? 0 : d / max;\r\n\r\n    if (max == min) {\r\n      h = 0;\r\n    } else {\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n\r\n      h /= 6;\r\n    }\r\n\r\n    h = h * 360;\r\n    s = s * 100;\r\n    v = v * 100;\r\n\r\n    return { h, s, v };\r\n  },\r\n\r\n  HSLtoHSV: function (h: number, s: number, l: number) {\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    let v = l + s * Math.min(l, 1 - l);\r\n    let hsvS = v == 0 ? 0 : 2 * (1 - l / v);\r\n\r\n    return {\r\n      h,\r\n      s: roundToRange(hsvS * 100, 0, 100),\r\n      v: roundToRange(v * 100, 0, 100),\r\n    };\r\n  },\r\n\r\n  HSVtoHSL: function (h: number, s: number, v: number) {\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let l = ((2 - s) * v) / 2;\r\n    let newS = l !== 0 && l !== 1 ? (s * v) / (l < 0.5 ? l * 2 : 2 - l * 2) : 0;\r\n\r\n    return {\r\n      h: roundToRange(h, 0, 360),\r\n      s: roundToRange(newS * 100, 0, 100),\r\n      l: roundToRange(l * 100, 0, 100),\r\n    };\r\n  },\r\n\r\n  HEXtoRGBA: function (hex: string) {\r\n    let r = 0,\r\n      g = 0,\r\n      b = 0,\r\n      a = 0;\r\n\r\n    if (/^#(([a-f0-9]){3,4}|([a-f0-9]){6}|([a-f0-9]){8})$/i.test(hex)) {\r\n      if (hex.length < 6) {\r\n        const splitHexValues = hex.split(\"\");\r\n        r = +(\"0x\" + splitHexValues[1] + splitHexValues[1]);\r\n        g = +(\"0x\" + splitHexValues[2] + splitHexValues[2]);\r\n        b = +(\"0x\" + splitHexValues[3] + splitHexValues[3]);\r\n        a = splitHexValues[4]\r\n          ? parseFloat(\r\n              (+(\"0x\" + splitHexValues[4] + splitHexValues[4]) / 255).toFixed(2)\r\n            )\r\n          : 1;\r\n      } else if (hex.length < 10) {\r\n        const splitHexValues = hex.split(/([a-f0-9]{2})/i);\r\n        r = +(\"0x\" + splitHexValues[1]);\r\n        g = +(\"0x\" + splitHexValues[3]);\r\n        b = +(\"0x\" + splitHexValues[5]);\r\n        a = splitHexValues[7]\r\n          ? parseFloat((+(\"0x\" + splitHexValues[7]) / 255).toFixed(2))\r\n          : 1;\r\n      }\r\n\r\n      return { r, g, b, a };\r\n    }\r\n  },\r\n\r\n  RGBAtoHEX: function (r: number, g: number, b: number, a: number) {\r\n    return `#${hexPad2(roundToRange(r, 0, 255))}${hexPad2(\r\n      roundToRange(g, 0, 255)\r\n    )}${hexPad2(roundToRange(b, 0, 255))}${\r\n      a < 1 ? hexPad2(Math.round(a * 255)) : \"\"\r\n    }`;\r\n  },\r\n\r\n  HSVtoRGB: function (h: number, s: number, v: number) {\r\n    h /= 360;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let r = 0,\r\n      g = 0,\r\n      b = 0,\r\n      i,\r\n      f,\r\n      p,\r\n      q,\r\n      t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n      case 0:\r\n        (r = v), (g = t), (b = p);\r\n        break;\r\n      case 1:\r\n        (r = q), (g = v), (b = p);\r\n        break;\r\n      case 2:\r\n        (r = p), (g = v), (b = t);\r\n        break;\r\n      case 3:\r\n        (r = p), (g = q), (b = v);\r\n        break;\r\n      case 4:\r\n        (r = t), (g = p), (b = v);\r\n        break;\r\n      case 5:\r\n        (r = v), (g = p), (b = q);\r\n        break;\r\n    }\r\n    return {\r\n      r: roundToRange(r * 255, 0, 255),\r\n      g: roundToRange(g * 255, 0, 255),\r\n      b: roundToRange(b * 255, 0, 255),\r\n    };\r\n  },\r\n\r\n  getNamedColor: function (color: string): string | undefined {\r\n    return {\r\n      aliceblue: \"240 248 255\",\r\n      antiquewhite: \"250 235 215\",\r\n      aqua: \"0 255 255\",\r\n      aquamarine: \"127 255 212\",\r\n      azure: \"240 255 255\",\r\n      beige: \"245 245 220\",\r\n      bisque: \"255 228 196\",\r\n      black: \"0 0 0\",\r\n      blanchedalmond: \"255 235 205\",\r\n      blue: \"0 0 255\",\r\n      blueviolet: \"138 43 226\",\r\n      brown: \"165 42 42\",\r\n      burlywood: \"222 184 135\",\r\n      cadetblue: \"95 158 160\",\r\n      chartreuse: \"127 255 0\",\r\n      chocolate: \"210 105 30\",\r\n      coral: \"255 127 80\",\r\n      cornflowerblue: \"100 149 237\",\r\n      cornsilk: \"255 248 220\",\r\n      crimson: \"220 20 60\",\r\n      cyan: \"0 255 255\",\r\n      darkblue: \"0 0 139\",\r\n      darkcyan: \"0 139 139\",\r\n      darkgoldenrod: \"184 134 11\",\r\n      darkgray: \"169 169 169\",\r\n      darkgrey: \"169 169 169\",\r\n      darkgreen: \"0 100 0\",\r\n      darkkhaki: \"189 183 107\",\r\n      darkmagenta: \"139 0 139\",\r\n      darkolivegreen: \"85 107 47\",\r\n      darkorange: \"255 140 0\",\r\n      darkorchid: \"153 50 204\",\r\n      darkred: \"139 0 0\",\r\n      darksalmon: \"233 150 122\",\r\n      darkseagreen: \"143 188 143\",\r\n      darkslateblue: \"72 61 139\",\r\n      darkslategray: \"47 79 79\",\r\n      darkslategrey: \"47 79 79\",\r\n      darkturquoise: \"0 206 209\",\r\n      darkviolet: \"148 0 211\",\r\n      deeppink: \"255 20 147\",\r\n      deepskyblue: \"0 191 255\",\r\n      dimgray: \"105 105 105\",\r\n      dimgrey: \"105 105 105\",\r\n      dodgerblue: \"30 144 255\",\r\n      firebrick: \"178 34 34\",\r\n      floralwhite: \"255 250 240\",\r\n      forestgreen: \"34 139 34\",\r\n      fuchsia: \"255 0 255\",\r\n      gainsboro: \"220 220 220\",\r\n      ghostwhite: \"248 248 255\",\r\n      gold: \"255 215 0\",\r\n      goldenrod: \"218 165 32\",\r\n      gray: \"128 128 128\",\r\n      grey: \"128 128 128\",\r\n      green: \"0 128 0\",\r\n      greenyellow: \"173 255 47\",\r\n      honeydew: \"240 255 240\",\r\n      hotpink: \"255 105 180\",\r\n      indianred: \"205 92 92\",\r\n      indigo: \"75 0 130\",\r\n      ivory: \"255 255 240\",\r\n      khaki: \"240 230 140\",\r\n      lavender: \"230 230 250\",\r\n      lavenderblush: \"255 240 245\",\r\n      lawngreen: \"124 252 0\",\r\n      lemonchiffon: \"255 250 205\",\r\n      lightblue: \"173 216 230\",\r\n      lightcoral: \"240 128 128\",\r\n      lightcyan: \"224 255 255\",\r\n      lightgoldenrodyellow: \"250 250 210\",\r\n      lightgray: \"211 211 211\",\r\n      lightgrey: \"211 211 211\",\r\n      lightgreen: \"144 238 144\",\r\n      lightpink: \"255 182 193\",\r\n      lightsalmon: \"255 160 122\",\r\n      lightseagreen: \"32 178 170\",\r\n      lightskyblue: \"135 206 250\",\r\n      lightslategray: \"119 136 153\",\r\n      lightslategrey: \"119 136 153\",\r\n      lightsteelblue: \"176 196 222\",\r\n      lightyellow: \"255 255 224\",\r\n      lime: \"0 255 0\",\r\n      limegreen: \"50 205 50\",\r\n      linen: \"250 240 230\",\r\n      magenta: \"255 0 255\",\r\n      maroon: \"128 0 0\",\r\n      mediumaquamarine: \"102 205 170\",\r\n      mediumblue: \"0 0 205\",\r\n      mediumorchid: \"186 85 211\",\r\n      mediumpurple: \"147 112 216\",\r\n      mediumseagreen: \"60 179 113\",\r\n      mediumslateblue: \"123 104 238\",\r\n      mediumspringgreen: \"0 250 154\",\r\n      mediumturquoise: \"72 209 204\",\r\n      mediumvioletred: \"199 21 133\",\r\n      midnightblue: \"25 25 112\",\r\n      mintcream: \"245 255 250\",\r\n      mistyrose: \"255 228 225\",\r\n      moccasin: \"255 228 181\",\r\n      navajowhite: \"255 222 173\",\r\n      navy: \"0 0 128\",\r\n      oldlace: \"253 245 230\",\r\n      olive: \"128 128 0\",\r\n      olivedrab: \"107 142 35\",\r\n      orange: \"255 165 0\",\r\n      orangered: \"255 69 0\",\r\n      orchid: \"218 112 214\",\r\n      palegoldenrod: \"238 232 170\",\r\n      palegreen: \"152 251 152\",\r\n      paleturquoise: \"175 238 238\",\r\n      palevioletred: \"216 112 147\",\r\n      papayawhip: \"255 239 213\",\r\n      peachpuff: \"255 218 185\",\r\n      peru: \"205 133 63\",\r\n      pink: \"255 192 203\",\r\n      plum: \"221 160 221\",\r\n      powderblue: \"176 224 230\",\r\n      purple: \"128 0 128\",\r\n      red: \"255 0 0\",\r\n      rosybrown: \"188 143 143\",\r\n      royalblue: \"65 105 225\",\r\n      saddlebrown: \"139 69 19\",\r\n      salmon: \"250 128 114\",\r\n      sandybrown: \"244 164 96\",\r\n      seagreen: \"46 139 87\",\r\n      seashell: \"255 245 238\",\r\n      sienna: \"160 82 45\",\r\n      silver: \"192 192 192\",\r\n      skyblue: \"135 206 235\",\r\n      slateblue: \"106 90 205\",\r\n      slategray: \"112 128 144\",\r\n      slategrey: \"112 128 144\",\r\n      snow: \"255 250 250\",\r\n      springgreen: \"0 255 127\",\r\n      steelblue: \"70 130 180\",\r\n      tan: \"210 180 140\",\r\n      teal: \"0 128 128\",\r\n      thistle: \"216 191 216\",\r\n      tomato: \"255 99 71\",\r\n      turquoise: \"64 224 208\",\r\n      violet: \"238 130 238\",\r\n      wheat: \"245 222 179\",\r\n      white: \"255 255 255\",\r\n      whitesmoke: \"245 245 245\",\r\n      yellow: \"255 255 0\",\r\n      yellowgreen: \"154 205 50\",\r\n    }[color];\r\n  },\r\n};\r\n","import { roundToRange } from \"./utility\";\r\nimport { YKColorParser } from \"./yk-color-parser\";\r\n\r\n/**\r\n * Color\r\n */\r\nexport class YKColor {\r\n  a: number;\r\n  hsv: { h: number; s: number; v: number };\r\n  rgb: { r: number; g: number; b: number };\r\n  hsl: { h: number; s: number; l: number };\r\n  hex: string;\r\n\r\n  constructor(h: number, s: number, v: number, a: number) {\r\n    this.a = a;\r\n    this.hsv = { h, s, v };\r\n    this.rgb = this.toRGB();\r\n    this.hsl = this.toHSL();\r\n    this.hex = this.toHEX();\r\n  }\r\n\r\n  getRGB() {\r\n    return {\r\n      r: roundToRange(this.rgb.r, 0, 255),\r\n      g: roundToRange(this.rgb.g, 0, 255),\r\n      b: roundToRange(this.rgb.b, 0, 255),\r\n    };\r\n  }\r\n\r\n  getHSV() {\r\n    return {\r\n      h: roundToRange(this.hsv.h, 0, 360),\r\n      s: roundToRange(this.hsv.s, 0, 100),\r\n      v: roundToRange(this.hsv.v, 0, 100),\r\n    };\r\n  }\r\n\r\n  getHSL() {\r\n    return {\r\n      h: roundToRange(this.hsl.h, 0, 360),\r\n      s: roundToRange(this.hsl.s, 0, 100),\r\n      l: roundToRange(this.hsl.l, 0, 100),\r\n    };\r\n  }\r\n\r\n  toRGB() {\r\n    let { h, s, v } = this.hsv;\r\n    return YKColorParser.HSVtoRGB(h, s, v);\r\n  }\r\n\r\n  toHSL() {\r\n    let { h, s, v } = this.hsv;\r\n    return YKColorParser.HSVtoHSL(h, s, v);\r\n  }\r\n\r\n  toHEX() {\r\n    let { r, g, b } = this.toRGB();\r\n    return YKColorParser.RGBAtoHEX(r, g, b, this.a);\r\n  }\r\n}\r\n","import \"./style.css\";\r\n\r\nimport { YKColor } from \"./yk-color\";\r\nimport { YKColorParser } from \"./yk-color-parser\";\r\nimport { hexPad2, createElement, attachEvent, roundToRange } from \"./utility\";\r\n\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport enum YKColorPickerPosition {\r\n  TOP = \"t\",\r\n  BOTTOM = \"b\",\r\n  LEFT = \"l\",\r\n  RIGHT = \"r\",\r\n}\r\n\r\nexport type YKColorPickerPositionFallback =\r\n  | \"btrl\"\r\n  | \"btlr\"\r\n  | \"brtl\"\r\n  | \"brlt\"\r\n  | \"bltr\"\r\n  | \"blrt\"\r\n  | \"tbrl\"\r\n  | \"tblr\"\r\n  | \"trbl\"\r\n  | \"trlb\"\r\n  | \"tlbr\"\r\n  | \"tlrb\"\r\n  | \"rbtl\"\r\n  | \"rblt\"\r\n  | \"rtbl\"\r\n  | \"rtlb\"\r\n  | \"rlbt\"\r\n  | \"rltb\"\r\n  | \"lbtr\"\r\n  | \"lbrt\"\r\n  | \"ltbr\"\r\n  | \"ltrb\"\r\n  | \"lrbt\"\r\n  | \"lrtb\";\r\n\r\nexport enum YKColorPickerMode {\r\n  RGB = \"rgb\",\r\n  HSV = \"hsv\",\r\n  HSL = \"hsl\",\r\n  HEX = \"hex\",\r\n}\r\n\r\nexport interface YKColorPickerOptions {\r\n  target?: HTMLElement | string | null;\r\n  container?: HTMLElement | string | null;\r\n  position?: YKColorPickerPosition;\r\n  positionFallback?: YKColorPickerPositionFallback;\r\n  representation?: YKColorPickerMode;\r\n  color?: string;\r\n  closeOnScroll?: boolean;\r\n  closeOnResize?: boolean;\r\n  theme?: \"light\" | \"dark\";\r\n  onInit?: (instance: YKColorPicker) => void;\r\n  onOpen?: (instance: YKColorPicker) => void;\r\n  onClose?: (instance: YKColorPicker) => void;\r\n  onInput?: (instance: YKColorPicker) => void;\r\n  onChange?: (instance: YKColorPicker) => void;\r\n  onCopy?: (instance: YKColorPicker) => void;\r\n  onRepresentationChange?: (instance: YKColorPicker) => void;\r\n  onTargetChange?: (\r\n    instance: YKColorPicker,\r\n    previousTarget: HTMLElement | null\r\n  ) => void;\r\n  onContainerChange?: (\r\n    instance: YKColorPicker,\r\n    previousParent: HTMLElement\r\n  ) => void;\r\n}\r\n\r\ninterface __YKColorPickerOptions extends Required<YKColorPickerOptions> {}\r\n\r\n/**\r\n * Color Picker\r\n */\r\nexport class YKColorPicker {\r\n  static DEFAULT_OPTIONS: __YKColorPickerOptions = {\r\n    target: null,\r\n    container: null,\r\n    position: YKColorPickerPosition.BOTTOM,\r\n    positionFallback: \"btrl\",\r\n    representation: YKColorPickerMode.RGB,\r\n    color: \"red\",\r\n    closeOnScroll: true,\r\n    closeOnResize: false,\r\n    theme: \"light\",\r\n    onInit: () => {},\r\n    onOpen: () => {},\r\n    onClose: () => {},\r\n    onInput: () => {},\r\n    onChange: () => {},\r\n    onCopy: () => {},\r\n    onRepresentationChange: () => {},\r\n    onTargetChange: () => {},\r\n    onContainerChange: () => {},\r\n  };\r\n\r\n  private _isOpen: boolean = false;\r\n  private _options: __YKColorPickerOptions = YKColorPicker.DEFAULT_OPTIONS;\r\n  private _color: YKColor = new YKColor(0, 0, 0, 1);\r\n  private _dom: any = {};\r\n  private _currentRepresentation: any;\r\n  private _dc: any;\r\n  private _onClickTargetBind: any;\r\n  private _onMouseDownCursorBind: any;\r\n  private _onMouseUpHueSliderBind: any;\r\n  private _onMouseMoveHueSliderBind: any;\r\n  private _onMouseDownHueSliderBind: any;\r\n  private _onMouseDownOpacitySliderBind: any;\r\n  private _onMouseUpOpacitySliderBind: any;\r\n  private _onMouseMoveOpacitySliderBind: any;\r\n  private _onResizeScrollWindowBind: any;\r\n  private _onClickCloseBind: any;\r\n  private _onKeyUpCloseBind: any;\r\n  private _onMouseMoveCursorBind: any;\r\n  private _onMouseUpCursorBind: any;\r\n  private _copyTimeout: any = null;\r\n  private _prevColor: any = null;\r\n  private _targetKeydownOpen: boolean = false;\r\n\r\n  constructor(options: YKColorPickerOptions) {\r\n    this._options = YKColorPicker._buildOptions(\r\n      YKColorPicker.DEFAULT_OPTIONS,\r\n      options\r\n    );\r\n\r\n    const { target, representation } = this._options;\r\n\r\n    let _target: HTMLElement | null = null;\r\n    if (typeof target == \"string\") {\r\n      _target = document.querySelector(target);\r\n    } else if (target && target.nodeType == Node.ELEMENT_NODE) {\r\n      _target = target;\r\n    } else if (target !== null && target !== undefined) {\r\n      throw new Error(\r\n        \"YKColorPicker:: target must be a string or an HTMLElement\"\r\n      );\r\n    }\r\n\r\n    this._dom[\"target\"] = _target;\r\n    this._currentRepresentation = representation;\r\n\r\n    // init click and enter key to target\r\n    if (_target) {\r\n      this._onClickTargetBind = this._onClickTarget.bind(this);\r\n      attachEvent(_target, \"click\", this._onClickTargetBind);\r\n    }\r\n\r\n    this._initDOM();\r\n    this.setColor(this._options.color);\r\n  }\r\n\r\n  public get options(): YKColorPickerOptions {\r\n    return this._options;\r\n  }\r\n\r\n  public get target(): HTMLElement | null {\r\n    return this._dom.target;\r\n  }\r\n\r\n  isOpen() {\r\n    return this._isOpen;\r\n  }\r\n\r\n  open() {\r\n    this._isOpen = true;\r\n    this._prevColor = this.getHEX();\r\n    if (this._options.container) {\r\n      this._attachToContainer(true);\r\n    } else {\r\n      this._attachToBody();\r\n    }\r\n    this._dom.overlayWrapper.classList.add(\"yk-overlay-wrapper--open\");\r\n    this._dom.cursor.focus();\r\n    this._options.onOpen && this._options.onOpen(this);\r\n  }\r\n\r\n  close() {\r\n    if (!this._dc) {\r\n      if (this._prevColor != this.getHEX()) {\r\n        this._options.onChange && this._options.onChange(this);\r\n      }\r\n      this._detachOverlay();\r\n      this._options.onClose && this._options.onClose(this);\r\n    }\r\n    this._dc = false;\r\n  }\r\n\r\n  getRGB() {\r\n    return { ...this._color.toRGB(), a: this._color.a };\r\n  }\r\n\r\n  getHSV() {\r\n    const { h, s, v } = this._color.getHSV();\r\n    return {\r\n      h,\r\n      s,\r\n      v,\r\n      a: this._color.a,\r\n    };\r\n  }\r\n\r\n  getHSL() {\r\n    const { h, s, l } = this._color.toHSL();\r\n    return {\r\n      h,\r\n      s,\r\n      l,\r\n      a: this._color.a,\r\n    };\r\n  }\r\n\r\n  getHEX() {\r\n    return this._color.toHEX();\r\n  }\r\n\r\n  updateOptions(options: YKColorPickerOptions) {\r\n    const _options = YKColorPicker._buildOptions(this._options, options);\r\n    this._options = _options;\r\n\r\n    if (options.hasOwnProperty(\"theme\")) {\r\n      this._updateTheme(_options.theme);\r\n    }\r\n\r\n    if (options.hasOwnProperty(\"representation\")) {\r\n      this._updateRepresentation(_options.representation);\r\n    }\r\n\r\n    // Update position only when container is not defined, since it will be updated if attacToBody invoked.\r\n    if (\r\n      options.hasOwnProperty(\"position\") &&\r\n      options.hasOwnProperty(\"container\") == false\r\n    ) {\r\n      this._updatePosition();\r\n    }\r\n\r\n    if (options.hasOwnProperty(\"container\")) {\r\n      if (options.container) {\r\n        this._attachToContainer(true);\r\n      } else {\r\n        this._attachToBody();\r\n      }\r\n    }\r\n\r\n    if (options.hasOwnProperty(\"target\")) {\r\n      this._updateTarget(options.target);\r\n    }\r\n\r\n    if (options.hasOwnProperty(\"color\") && options.color) {\r\n      this.setColor(options.color);\r\n    }\r\n  }\r\n\r\n  getColor() {\r\n    switch (this._currentRepresentation) {\r\n      case YKColorPickerMode.RGB: {\r\n        const { r, g, b } = this._color.getRGB();\r\n        return {\r\n          r,\r\n          g,\r\n          b,\r\n          a: this._color.a,\r\n        };\r\n      }\r\n\r\n      case YKColorPickerMode.HSV: {\r\n        const { h, s, v } = this._color.getHSV();\r\n        return {\r\n          h,\r\n          s,\r\n          v,\r\n          a: this._color.a,\r\n        };\r\n      }\r\n\r\n      case YKColorPickerMode.HSL: {\r\n        const { h, s, l } = this._color.getHSL();\r\n        return {\r\n          h,\r\n          s,\r\n          l,\r\n          a: this._color.a,\r\n        };\r\n      }\r\n\r\n      case YKColorPickerMode.HEX:\r\n        return this.getHEX();\r\n    }\r\n  }\r\n\r\n  setColor(value: string) {\r\n    const { h, s, v, a } = YKColorParser.parse(value);\r\n    this._color = new YKColor(h, s, v, a);\r\n    this._updateGUI();\r\n    this._options.onInput(this);\r\n  }\r\n\r\n  private _initDOM() {\r\n    // #dom declaration\r\n    const cp_overlayWrapper = createElement(\"div\", [\"yk-overlay-wrapper\"]);\r\n    const cp_Wrapper = createElement(\"div\", [\"yk-wrapper\"]);\r\n\r\n    // Append child nodes\r\n    cp_overlayWrapper.appendChild(cp_Wrapper);\r\n    // build palette\r\n    cp_Wrapper.appendChild(this._buildPaletteColor());\r\n    // build color settings\r\n    cp_Wrapper.appendChild(this._buildColorSettings());\r\n\r\n    attachEvent(cp_overlayWrapper, \"click\", (event: MouseEvent) =>\r\n      event.stopPropagation()\r\n    );\r\n    this._dom[\"overlayWrapper\"] = cp_overlayWrapper;\r\n\r\n    this._onKeyUpCloseBind = this._onKeyUpClose.bind(this);\r\n    this._onResizeScrollWindowBind = this._onResizeScrollWindow.bind(this);\r\n    this._onClickCloseBind = this.close.bind(this);\r\n\r\n    if (this._options.container) {\r\n      this._attachToContainer(false);\r\n    } else {\r\n      document.body.appendChild(this._dom.overlayWrapper);\r\n    }\r\n\r\n    this._options.onInit && this._options.onInit(this);\r\n  }\r\n\r\n  private _updateGUI() {\r\n    this._updateCursorThumb();\r\n    this._updateInputs();\r\n    this._updateColorPreview(false);\r\n    this._updateHueThumb();\r\n    this._updateOpacityThumb();\r\n  }\r\n\r\n  private _buildPaletteColor() {\r\n    const paletteWrapper = createElement(\"div\", [\"yk-palette-wrapper\"]);\r\n    const palette = createElement(\"div\", [\"yk-palette\"]);\r\n    const cursor = createElement(\"a\", [\"yk-cursor\"], { tabindex: 0 });\r\n\r\n    paletteWrapper.appendChild(palette);\r\n    paletteWrapper.appendChild(cursor);\r\n\r\n    // Append event\r\n    this._onMouseDownCursorBind = this._onMouseDownCursor.bind(this);\r\n    this._onMouseUpCursorBind = this._onMouseUpCursor.bind(this);\r\n    this._onMouseMoveCursorBind = this._onMouseMoveCursor.bind(this);\r\n    attachEvent(paletteWrapper, \"pointerdown\", this._onMouseDownCursorBind);\r\n    attachEvent(cursor, \"keydown\", this._onKeydownCursor.bind(this));\r\n\r\n    this._dom[\"palette\"] = palette;\r\n    this._dom[\"cursor\"] = cursor;\r\n\r\n    return paletteWrapper;\r\n  }\r\n\r\n  private _buildColorSettings() {\r\n    const colorSettings = createElement(\"div\", [\"yk-color-settings\"]);\r\n\r\n    // Build color color\r\n    colorSettings.appendChild(this._buildCopyColor());\r\n    // Build color preview\r\n    colorSettings.appendChild(this._buildColorPreview());\r\n    // Build sliders\r\n    colorSettings.appendChild(this._buildColorSliders());\r\n    // Build inputs\r\n    colorSettings.appendChild(this._buildColorInputs());\r\n\r\n    return colorSettings;\r\n  }\r\n\r\n  private _buildColorInputs() {\r\n    // Create elements\r\n    const inputsSettings = createElement(\"div\", [\"yk-color-model-wrapper\"]);\r\n    const inputsWrapper = createElement(\"div\", [\"yk-color-model\"]);\r\n    const btnSwitch = createElement(\"button\", [\"yk-color-model-switch\"], {\r\n      type: \"button\",\r\n    });\r\n    btnSwitch.appendChild(\r\n      this._createSVGIcon(\r\n        `<path d=\"m3.5045 11.431 1.5786-1.5786 3.0256 3.0256 3.0256-3.0256 1.5786 1.5786-4.6042 4.4726zm4.6042-11.313 4.6042 4.4726-1.5786 1.5786-3.0256-3.0256-3.0256 3.0256-1.5786-1.5786z\"/>`\r\n      )\r\n    );\r\n\r\n    // Append elements\r\n    inputsSettings.appendChild(inputsWrapper);\r\n    inputsSettings.appendChild(btnSwitch);\r\n\r\n    // Attach Events\r\n    attachEvent(btnSwitch, \"click\", this._onClickInputsSwitch.bind(this));\r\n\r\n    this._dom[\"btnSwitch\"] = btnSwitch;\r\n    this._dom[\"inputsWrapper\"] = inputsWrapper;\r\n\r\n    return inputsSettings;\r\n  }\r\n\r\n  private _buildInput() {\r\n    const { inputsWrapper } = this._dom;\r\n    inputsWrapper.innerHTML = \"\";\r\n    if (this._currentRepresentation == YKColorPickerMode.HEX) {\r\n      inputsWrapper.appendChild(this._buildHEXInput());\r\n    } else {\r\n      inputsWrapper.appendChild(this._buildQuadrupedInput());\r\n    }\r\n  }\r\n\r\n  private _buildHEXInput() {\r\n    const inputWrapper = createElement(\"div\", [\"yk-hex-input\"]);\r\n    const inputHEX = createElement(\"input\", [\"yk-color-input\"], {\r\n      id: \"yk-color-input-hex\",\r\n    });\r\n    const labelHEX = createElement(\"label\", [\"yk-color-model-label\"], {\r\n      for: \"yk-color-input-hex\",\r\n    });\r\n    inputHEX.setAttribute(\"type\", \"text\");\r\n    labelHEX.textContent = \"HEX\";\r\n    inputWrapper.appendChild(inputHEX);\r\n    inputWrapper.appendChild(labelHEX);\r\n\r\n    attachEvent(inputHEX, \"focus\", this._onFocusInput.bind(this));\r\n    attachEvent(inputHEX, \"keydown\", this._onKeyDownInputHEX.bind(this));\r\n    attachEvent(inputHEX, \"input\", this._onInputHEX.bind(this));\r\n    attachEvent(inputHEX, \"change\", this._onChangeInputHEX.bind(this));\r\n\r\n    this._dom[\"inputHEX\"] = inputHEX;\r\n\r\n    return inputWrapper;\r\n  }\r\n\r\n  private _buildQuadrupedInput() {\r\n    // Create #dom elements\r\n    const inputWrapper = createElement(\"div\", [\"yk-input-wrapper\"]);\r\n    const inputA = createElement(\"input\", [\"yk-color-input\"], {\r\n      type: \"text\",\r\n      inputmode: \"numeric\",\r\n      id: \"yk-color-input-1\",\r\n    });\r\n    const inputB = createElement(\"input\", [\"yk-color-input\"], {\r\n      type: \"text\",\r\n      inputmode: \"numeric\",\r\n      id: \"yk-color-input-2\",\r\n    });\r\n    const inputC = createElement(\"input\", [\"yk-color-input\"], {\r\n      type: \"text\",\r\n      inputmode: \"numeric\",\r\n      id: \"yk-color-input-3\",\r\n    });\r\n    const inputD = createElement(\"input\", [\"yk-color-input\"], {\r\n      type: \"text\",\r\n      inputmode: \"numeric\",\r\n      id: \"yk-color-input-4\",\r\n    });\r\n    const labelA = createElement(\"label\", [\"yk-color-model-label\"], {\r\n      for: \"yk-color-input-1\",\r\n    });\r\n    const labelB = createElement(\"label\", [\"yk-color-model-label\"], {\r\n      for: \"yk-color-input-2\",\r\n    });\r\n    const labelC = createElement(\"label\", [\"yk-color-model-label\"], {\r\n      for: \"yk-color-input-3\",\r\n    });\r\n    const labelD = createElement(\"label\", [\"yk-color-model-label\"], {\r\n      for: \"yk-color-input-4\",\r\n    });\r\n\r\n    // Set labels' text\r\n    const model = this._currentRepresentation.toUpperCase();\r\n    labelA.textContent = model[0];\r\n    labelB.textContent = model[1];\r\n    labelC.textContent = model[2];\r\n    labelD.textContent = \"A\";\r\n\r\n    // Append child elements\r\n    inputWrapper.appendChild(inputA);\r\n    inputWrapper.appendChild(inputB);\r\n    inputWrapper.appendChild(inputC);\r\n    inputWrapper.appendChild(inputD);\r\n    inputWrapper.appendChild(labelA);\r\n    inputWrapper.appendChild(labelB);\r\n    inputWrapper.appendChild(labelC);\r\n    inputWrapper.appendChild(labelD);\r\n\r\n    // Attach events\r\n    attachEvent(inputA, \"focus\", this._onFocusInput.bind(this));\r\n    attachEvent(inputA, \"keydown\", this._onKeyDownInputA.bind(this));\r\n    attachEvent(inputA, \"input\", this._onInputA.bind(this));\r\n    attachEvent(inputA, \"change\", this._onChangeInputA.bind(this));\r\n\r\n    attachEvent(inputB, \"focus\", this._onFocusInput.bind(this));\r\n    attachEvent(inputB, \"keydown\", this._onKeyDownInputB.bind(this));\r\n    attachEvent(inputB, \"input\", this._onInputB.bind(this));\r\n    attachEvent(inputB, \"change\", this._onChangeInputB.bind(this));\r\n\r\n    attachEvent(inputC, \"focus\", this._onFocusInput.bind(this));\r\n    attachEvent(inputC, \"keydown\", this._onKeyDownInputC.bind(this));\r\n    attachEvent(inputC, \"input\", this._onInputC.bind(this));\r\n    attachEvent(inputC, \"change\", this._onChangeInputC.bind(this));\r\n\r\n    attachEvent(inputD, \"keydown\", this._onKeyDownAlphaInput.bind(this));\r\n    attachEvent(inputD, \"input\", this._onKeyUpAlphaInput.bind(this));\r\n    attachEvent(inputD, \"change\", this._onChangeAlphaInput.bind(this));\r\n\r\n    this._dom[\"inputA\"] = inputA;\r\n    this._dom[\"inputB\"] = inputB;\r\n    this._dom[\"inputC\"] = inputC;\r\n    this._dom[\"inputAlpha\"] = inputD;\r\n\r\n    return inputWrapper;\r\n  }\r\n\r\n  private _updateOpacityThumb() {\r\n    const { opacitySlider, opacityThumb } = this._dom;\r\n    opacityThumb.style.translate = `${\r\n      this._color.a * opacitySlider.offsetWidth\r\n    }px`;\r\n  }\r\n\r\n  private _updateHueThumb() {\r\n    const { hueThumb, hueSlider } = this._dom;\r\n    hueThumb.style.translate = `${\r\n      (this._color.hsv.h / 360) * hueSlider.offsetWidth\r\n    }px`;\r\n  }\r\n\r\n  private _setQuadrupedValue(\r\n    a: string | number,\r\n    b: string | number,\r\n    c: string | number\r\n  ) {\r\n    this._dom[\"inputA\"].value = a;\r\n    this._dom[\"inputB\"].value = b;\r\n    this._dom[\"inputC\"].value = c;\r\n    this._dom[\"inputAlpha\"].value = parseFloat(this._color.a.toFixed(2));\r\n  }\r\n\r\n  private _updateHEXInput() {\r\n    this._dom[\"inputHEX\"].value = this._color.hex;\r\n  }\r\n\r\n  private _updateSettingsView() {\r\n    this._updateInputsValue();\r\n    this._updateColorPreview(true);\r\n  }\r\n\r\n  private _updateInputs() {\r\n    this._buildInput();\r\n    this._updateInputsValue();\r\n  }\r\n\r\n  private _updateInputsValue() {\r\n    switch (this._currentRepresentation) {\r\n      case YKColorPickerMode.RGB:\r\n        {\r\n          const { r, g, b } = (this._color.rgb = this._color.toRGB());\r\n          this._setQuadrupedValue(r, g, b);\r\n        }\r\n        break;\r\n\r\n      case YKColorPickerMode.HSV:\r\n        {\r\n          const { h, s, v } = this._color.getHSV();\r\n          this._setQuadrupedValue(`${h}°`, `${s}%`, `${v}%`);\r\n        }\r\n        break;\r\n\r\n      case YKColorPickerMode.HSL:\r\n        {\r\n          const { h, s, l } = (this._color.hsl = this._color.toHSL());\r\n          this._setQuadrupedValue(`${h}°`, `${s}%`, `${l}%`);\r\n        }\r\n        break;\r\n\r\n      case YKColorPickerMode.HEX:\r\n        {\r\n          this._updateHEXColor();\r\n          this._updateHEXInput();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _updateColorPreview(fireEvent: boolean) {\r\n    const alpha = this._color.a;\r\n    const hsl = this._color.toHSL();\r\n    const { palette, opacitySlider, colorPreview } = this._dom;\r\n    const paletteBGColor = `hsl(${hsl.h}deg 100% 50% / 1)`;\r\n    palette.style.backgroundImage = `linear-gradient(180deg, transparent 0%, rgba(0,0,0,1) 100%), linear-gradient(90deg, rgba(255,255,255,1) 0%, ${paletteBGColor} 100%)`;\r\n    const hslColor = `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`;\r\n    opacitySlider.style.setProperty(\r\n      \"background-image\",\r\n      `linear-gradient(90deg, transparent, ${hslColor})`\r\n    );\r\n    colorPreview.setAttribute(\"fill\", hslColor);\r\n    colorPreview.setAttribute(\"fill-opacity\", alpha);\r\n    if (fireEvent == true) {\r\n      this._options.onInput(this);\r\n    }\r\n  }\r\n\r\n  private _updateCursorThumb() {\r\n    const { palette, cursor } = this._dom;\r\n    const { s, v } = this._color.getHSV();\r\n    cursor.style.translate = `${(s / 100) * palette.offsetWidth}px ${\r\n      palette.offsetHeight - (v / 100) * palette.offsetHeight\r\n    }px`;\r\n  }\r\n\r\n  private _buildCopyColor() {\r\n    const copyColor = createElement(\"button\", [\"yk-clipboard-color\"], {\r\n      type: \"button\",\r\n    });\r\n    attachEvent(copyColor, \"click\", this._onClickCopyColor.bind(this));\r\n    this._dom[\"copyColor\"] = copyColor;\r\n    this._attachCopyIcon();\r\n\r\n    return copyColor;\r\n  }\r\n\r\n  private _attachCopyIcon() {\r\n    const path = `<path d=\"m1.9695 11.037v-6.7c0-2 1.6-3.7 3.7-3.7h4.3c0.8 0 1.5 0.5 1.7 1.2h-5.6c-1.6 0.1-2.9 1.4-2.9 3.1v7.9c-0.7-0.3-1.2-1-1.2-1.8zm4.3 4.3c-1 0-1.8-0.8-1.8-1.8v-8.6c0-1 0.8-1.8 1.8-1.8h6.1c1 0 1.8 0.8 1.8 1.8v8.6c0 1-0.8 1.8-1.8 1.8zm6.7-1.8v-8.6c0-0.3-0.3-0.6-0.6-0.6h-6.1c-0.3 0-0.6 0.3-0.6 0.6v8.6c0 0.3 0.3 0.6 0.6 0.6h6.1c0.3 0 0.6-0.3 0.6-0.6z\"/>`;\r\n    this._dom.copyColor.innerHTML = \"\";\r\n    this._dom.copyColor.appendChild(this._createSVGIcon(path));\r\n  }\r\n\r\n  private _attachCheckIcon() {\r\n    const path = `<path d=\"m13.975 5.3001c0.24929-0.24929 0.16619-0.58168-0.0831-0.83097l-0.66477-0.66477c-0.24929-0.24929-0.58168-0.16619-0.83097 0.083097l-5.5675 6.2322-3.407-3.1577c-0.24929-0.24929-0.58168-0.16619-0.83097 0.083097l-0.66477 0.66477c-0.24929 0.24929-0.16619 0.58168 0.083097 0.83097l4.5703 4.1548c0.24929 0.24929 0.58168 0.16619 0.83097-0.0831z\"/>`;\r\n    this._dom.copyColor.innerHTML = \"\";\r\n    this._dom.copyColor.appendChild(this._createSVGIcon(path));\r\n  }\r\n\r\n  private _createSVGIcon(path: string) {\r\n    const svgElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      \"svg\"\r\n    );\r\n    svgElement.setAttribute(\"viewBox\", \"0 0 16 16\");\r\n    svgElement.setAttribute(\"width\", \"16px\");\r\n    svgElement.setAttribute(\"height\", \"16px\");\r\n    svgElement.innerHTML = path;\r\n\r\n    return svgElement;\r\n  }\r\n\r\n  private _buildColorSliders() {\r\n    const sliders = createElement(\"div\", [\"yk-sliders\"]);\r\n\r\n    // Build hue slider\r\n    sliders.appendChild(this._buildHueSlider());\r\n    // Build hue slider\r\n    sliders.appendChild(this._buildOpacitySlider());\r\n\r\n    return sliders;\r\n  }\r\n\r\n  private _buildHueSlider() {\r\n    // Create elements\r\n    const sliderWrapper = createElement(\"div\", [\"yk-hue-slider-wrapper\"]);\r\n    const slider = createElement(\"div\", [\"yk-hue-slider\"]);\r\n    const sliderThumb = createElement(\"div\", [\"yk-hue-slider-thumb\"]);\r\n    sliderThumb.setAttribute(\"tabindex\", \"0\");\r\n\r\n    // Appench child element\r\n    sliderWrapper.appendChild(slider);\r\n    sliderWrapper.appendChild(sliderThumb);\r\n\r\n    // Attach events\r\n    this._onMouseDownHueSliderBind = this._onMouseDownHueSlider.bind(this);\r\n    this._onMouseUpHueSliderBind = this._onMouseUpHueSlider.bind(this);\r\n    this._onMouseMoveHueSliderBind = this._onMouseMoveHueSlider.bind(this);\r\n    attachEvent(sliderWrapper, \"pointerdown\", this._onMouseDownHueSliderBind);\r\n    attachEvent(sliderThumb, \"keydown\", this._onKeyDownHueSlider.bind(this));\r\n\r\n    this._dom[\"hueSlider\"] = slider;\r\n    this._dom[\"hueThumb\"] = sliderThumb;\r\n\r\n    return sliderWrapper;\r\n  }\r\n\r\n  private _buildOpacitySlider() {\r\n    // Create elements\r\n    const sliderWrapper = createElement(\"div\", [\"yk-opacity-slider-wrapper\"]);\r\n    const color = createElement(\"div\", [\"yk-opacity-color\"]);\r\n    const sliderThumb = createElement(\"div\", [\"yk-opacity-slider-thumb\"]);\r\n    sliderThumb.setAttribute(\"tabindex\", \"0\");\r\n\r\n    // Appench child element\r\n    sliderWrapper.appendChild(color);\r\n    sliderWrapper.appendChild(sliderThumb);\r\n\r\n    // Attach events\r\n    this._onMouseDownOpacitySliderBind =\r\n      this._onMouseDownOpacitySlider.bind(this);\r\n    this._onMouseUpOpacitySliderBind = this._onMouseUpOpacitySlider.bind(this);\r\n    this._onMouseMoveOpacitySliderBind =\r\n      this._onMouseMoveOpacitySlider.bind(this);\r\n    attachEvent(\r\n      sliderWrapper,\r\n      \"pointerdown\",\r\n      this._onMouseDownOpacitySliderBind\r\n    );\r\n    attachEvent(\r\n      sliderThumb,\r\n      \"keydown\",\r\n      this._onKeyDownOpacitySlider.bind(this)\r\n    );\r\n\r\n    this._dom[\"opacitySlider\"] = color;\r\n    this._dom[\"opacityThumb\"] = sliderThumb;\r\n\r\n    return sliderWrapper;\r\n  }\r\n\r\n  private _buildColorPreview() {\r\n    const colorPreviewWrapper = createElement(\"span\", [\r\n      \"yk-color-preview-wrapper\",\r\n    ]);\r\n\r\n    const svgElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      \"svg\"\r\n    );\r\n    svgElement.setAttribute(\"width\", \"38\");\r\n    svgElement.setAttribute(\"height\", \"38\");\r\n\r\n    const colorPreview = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      \"circle\"\r\n    );\r\n    colorPreview.setAttribute(\"cx\", \"19\");\r\n    colorPreview.setAttribute(\"cy\", \"19\");\r\n    colorPreview.setAttribute(\"r\", \"18\");\r\n    colorPreview.classList.add(\"yk-preview-stroke\");\r\n\r\n    svgElement.innerHTML =\r\n      '<pattern id=\"transparent-grid\" x=\"0\" y=\"0\" width=\"6\" height=\"6\" patternUnits=\"userSpaceOnUse\"><path fill=\"#DBDBDB\" d=\"M0 0h3v3H0z\"/><path fill=\"#fff\" d=\"M3 0h3v3H3z\"/><path fill=\"#DBDBDB\" d=\"M3 3h3v3H3z\"/><path fill=\"#fff\" d=\"M0 3h3v3H0z\"/></pattern></defs><circle cx=\"19\" cy=\"19\" r=\"18\" fill=\"url(#transparent-grid)\"/>';\r\n    svgElement.appendChild(colorPreview);\r\n    colorPreviewWrapper.appendChild(svgElement);\r\n\r\n    this._dom.colorPreview = colorPreview;\r\n\r\n    return colorPreviewWrapper;\r\n  }\r\n\r\n  private _rgbUpdateView() {\r\n    this._updateColorPreview(true);\r\n    this._updateHueThumb();\r\n    this._updateCursorThumb();\r\n  }\r\n\r\n  private _updateHEXColorSection(\r\n    color: string,\r\n    event: Event,\r\n    con: (a: number, b: number) => boolean,\r\n    conValue: number,\r\n    op: (a: number, b: number) => number,\r\n    startSelect: number,\r\n    endSelect: number\r\n  ) {\r\n    const target = event.target as HTMLInputElement;\r\n    const { rgb, hex } = this._color;\r\n    if (con((rgb as any)[color], conValue)) {\r\n      (rgb as any)[color] = op((rgb as any)[color], 1);\r\n      this._color.hex =\r\n        hex.substring(0, startSelect) +\r\n        hexPad2(roundToRange((rgb as any)[color], 0, 255)) +\r\n        hex.substring(endSelect);\r\n      const { r, g, b } = rgb;\r\n      this._color.hsv = YKColorParser.RGBtoHSV(r, g, b);\r\n      this._rgbUpdateView();\r\n    }\r\n    target.value = this._color.hex;\r\n    target.setSelectionRange(startSelect, endSelect);\r\n    event.preventDefault();\r\n  }\r\n\r\n  private _updateHEXAlphaSection(\r\n    event: Event,\r\n    con: (a: number, b: number) => boolean,\r\n    conValue: number,\r\n    op: (a: number, b: number) => number\r\n  ) {\r\n    const target = event.target as HTMLInputElement;\r\n    const { hex, a } = this._color;\r\n    if (con(a, conValue)) {\r\n      this._color.a = parseFloat(op(a, 0.01).toFixed(2));\r\n      target.value = this._color.hex =\r\n        hex.substring(0, 7) +\r\n        hexPad2(roundToRange(this._color.a * 255, 0, 255));\r\n      this._updateColorPreview(true);\r\n      this._updateOpacityThumb();\r\n    }\r\n    target.value = this._color.hex;\r\n    target.setSelectionRange(7, 9);\r\n    event.preventDefault();\r\n  }\r\n\r\n  private _updateOpacityValue(value: number) {\r\n    this._color.a = parseFloat(value.toFixed(2));\r\n    if (this._currentRepresentation == YKColorPickerMode.HEX) {\r\n      this._updateHEXColor();\r\n      this._updateHEXInput();\r\n    } else {\r\n      this._dom.inputAlpha.value = this._color.a;\r\n    }\r\n    this._updateColorPreview(true);\r\n  }\r\n\r\n  private _updatePosition() {\r\n    if (this._dom.target == null) {\r\n      return;\r\n    }\r\n    if (!YKColorPicker._isTargetInViewport(this._dom.target)) {\r\n      this.close();\r\n      return;\r\n    }\r\n    this._setPositionAxis(this._getPositionAxis());\r\n  }\r\n\r\n  private _attachToContainer(callEvent: boolean) {\r\n    if (!this._options.container) {\r\n      throw new Error(\"YKColorPicker:: container is not defined\");\r\n    }\r\n    let _container: HTMLElement | null = null;\r\n    if (typeof this._options.container == \"string\") {\r\n      _container = document.querySelector(this._options.container);\r\n    } else if (\r\n      this._options.container &&\r\n      this._options.container.nodeType == Node.ELEMENT_NODE\r\n    ) {\r\n      _container = this._options.container;\r\n    }\r\n    if (!_container) {\r\n      throw ReferenceError(\r\n        \"ColorPicker:: container to set color picker is undefined\"\r\n      );\r\n    }\r\n    this._removeWindowEvents();\r\n    const { overlayWrapper } = this._dom;\r\n    const parent = overlayWrapper.parentElement;\r\n    _container.appendChild(overlayWrapper);\r\n    overlayWrapper.classList.add(\"yk-overlay-wrapper--static\");\r\n    this._updateTheme(this._options.theme);\r\n    this._updateGUI();\r\n    if (callEvent && parent != overlayWrapper.parentElement) {\r\n      this._options.onContainerChange &&\r\n        this._options.onContainerChange(this, parent);\r\n    }\r\n  }\r\n\r\n  private _attachToBody() {\r\n    this._removeWindowEvents();\r\n    const { overlayWrapper } = this._dom;\r\n    const parent = overlayWrapper.parentElement;\r\n    document.body.appendChild(overlayWrapper);\r\n    overlayWrapper.classList.remove(\"yk-overlay-wrapper--static\");\r\n    this._updateTheme(this._options.theme);\r\n    this._updateGUI();\r\n    this._updatePosition();\r\n    attachEvent(window, \"resize\", this._onResizeScrollWindowBind);\r\n    attachEvent(window, \"scroll\", this._onResizeScrollWindowBind);\r\n    attachEvent(document, \"click\", this._onClickCloseBind);\r\n    attachEvent(document, \"keyup\", this._onKeyUpCloseBind);\r\n    if (parent != overlayWrapper.parentElement) {\r\n      this._options.onContainerChange &&\r\n        this._options.onContainerChange(this, parent);\r\n    }\r\n  }\r\n\r\n  private _detachOverlay() {\r\n    this._dom.overlayWrapper.classList.remove(\"yk-overlay-wrapper--open\");\r\n    this._removeWindowEvents();\r\n    this._isOpen = false;\r\n    this._dom.target?.focus();\r\n  }\r\n\r\n  private _onKeydownCursor(event: KeyboardEvent) {\r\n    if (\r\n      [\"ArrowUp\", \"ArrowDown\", \"ArrowRight\", \"ArrowLeft\"].includes(event.key)\r\n    ) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      switch (event.key) {\r\n        case \"ArrowUp\":\r\n          {\r\n            let value = Math.round(this._color.hsv.v);\r\n            if (value < 100) {\r\n              this._color.hsv.v = value + 1;\r\n            }\r\n          }\r\n          break;\r\n        case \"ArrowDown\":\r\n          {\r\n            let value = Math.round(this._color.hsv.v);\r\n            if (value > 0) {\r\n              this._color.hsv.v = value - 1;\r\n            }\r\n          }\r\n          break;\r\n        case \"ArrowRight\":\r\n          {\r\n            let value = Math.round(this._color.hsv.s);\r\n            if (value < 100) {\r\n              this._color.hsv.s = value + 1;\r\n            }\r\n          }\r\n          break;\r\n        case \"ArrowLeft\":\r\n          {\r\n            let value = Math.round(this._color.hsv.s);\r\n            if (value > 0) {\r\n              this._color.hsv.s = value - 1;\r\n            }\r\n          }\r\n          break;\r\n      }\r\n      this._updateCursorThumb();\r\n      this._updateInputsValue();\r\n      this._updateColorPreview(true);\r\n    }\r\n  }\r\n\r\n  private _onClickTarget(event: MouseEvent) {\r\n    event.stopPropagation();\r\n    this._targetKeydownOpen = true;\r\n    this._isOpen ? this.close() : this.open();\r\n  }\r\n\r\n  private _onMouseDownCursor(event: MouseEvent) {\r\n    this._dc = true;\r\n    attachEvent(document, \"pointermove\", this._onMouseMoveCursorBind);\r\n    attachEvent(document, \"pointerup\", this._onMouseUpCursorBind);\r\n    this._onMouseMoveCursorBind(event);\r\n  }\r\n\r\n  private _onMouseUpCursor(e: MouseEvent) {\r\n    document.removeEventListener(\"pointermove\", this._onMouseMoveCursorBind);\r\n    document.removeEventListener(\"pointerup\", this._onMouseUpCursorBind);\r\n    if (this._dom.overlayWrapper.contains(e.target)) {\r\n      this._dc = false;\r\n    }\r\n    this._dom.cursor.focus();\r\n  }\r\n\r\n  private _onMouseMoveCursor(event: MouseEvent) {\r\n    const { x, y } = this._getCursorPosition(event.clientX, event.clientY);\r\n    this._dom.cursor.style.translate = `${x}px ${y}px`;\r\n    const paletteHeight = this._dom.palette.offsetHeight;\r\n    const paletteWidth = this._dom.palette.offsetWidth;\r\n    this._color.hsv.s = (x / paletteWidth) * 100;\r\n    this._color.hsv.v = ((paletteHeight - y) / paletteHeight) * 100;\r\n    this._updateSettingsView();\r\n  }\r\n\r\n  private _onClickInputsSwitch() {\r\n    switch (this._currentRepresentation) {\r\n      case YKColorPickerMode.RGB:\r\n        this._updateRepresentation(YKColorPickerMode.HSV);\r\n        break;\r\n      case YKColorPickerMode.HSV:\r\n        this._updateRepresentation(YKColorPickerMode.HSL);\r\n        break;\r\n      case YKColorPickerMode.HSL:\r\n        this._updateRepresentation(YKColorPickerMode.HEX);\r\n        break;\r\n      case YKColorPickerMode.HEX:\r\n        this._updateRepresentation(YKColorPickerMode.RGB);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onFocusInput() {\r\n    switch (this._currentRepresentation) {\r\n      case YKColorPickerMode.RGB:\r\n        this._color.rgb = this._color.getRGB();\r\n        break;\r\n      case YKColorPickerMode.HSV:\r\n        this._color.hsv = this._color.getHSV();\r\n        break;\r\n      case YKColorPickerMode.HSL:\r\n        this._color.hsl = this._color.getHSL();\r\n        break;\r\n      case YKColorPickerMode.HEX:\r\n        this._updateHEXColor();\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onKeyDownAlphaInput(event: KeyboardEvent) {\r\n    const target = event.target as HTMLInputElement;\r\n    const { a } = this._color;\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n        {\r\n          if (a < 1) {\r\n            let alphaValue = parseFloat((a + 0.01).toFixed(2));\r\n            if (alphaValue > 1) {\r\n              alphaValue = 1;\r\n            }\r\n            target.value = (this._color.a = alphaValue).toString();\r\n            this._updateColorPreview(true);\r\n            this._updateOpacityThumb();\r\n          }\r\n        }\r\n        break;\r\n\r\n      case \"ArrowDown\":\r\n        {\r\n          if (a > 0) {\r\n            let alphaValue = parseFloat((a - 0.01).toFixed(2));\r\n            if (alphaValue < 0) {\r\n              alphaValue = 0;\r\n            }\r\n            target.value = (this._color.a = alphaValue).toString();\r\n            this._updateColorPreview(true);\r\n            this._updateOpacityThumb();\r\n          }\r\n        }\r\n        break;\r\n\r\n      case \".\":\r\n        {\r\n          if (/(\\.)/.test(target.value)) {\r\n            event.preventDefault();\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onKeyUpAlphaInput(event: KeyboardEvent) {\r\n    const target = event.target as HTMLInputElement;\r\n    if (/^(0(\\.\\d{1,2})?|(0*)1?)$/.test(target.value) || target.value == \"\") {\r\n      const value = parseFloat(target.value) || 0;\r\n      if (!isNaN(value) && value >= 0 && value <= 1) {\r\n        this._color.a = value;\r\n        this._updateColorPreview(true);\r\n        this._updateOpacityThumb();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onChangeAlphaInput(event: Event) {\r\n    event.target &&\r\n      ((event.target as HTMLInputElement).value = this._color.a.toString());\r\n  }\r\n\r\n  private _onKeyDownInputHEX(event: KeyboardEvent) {\r\n    const target = event.target as HTMLInputElement;\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n        {\r\n          if (\r\n            !/^#([0-9a-f]{3}|[0-9a-f]{4}|[0-9a-f]{6}|[0-9a-f]{8})$/i.test(\r\n              target.value\r\n            )\r\n          ) {\r\n            target.value = this._color.hex;\r\n          }\r\n          const caret = this._getCaretPosition(target);\r\n          const length = target.value.length;\r\n          if (length <= 5) {\r\n            if (caret < 2) {\r\n              this._updateHEXColorSection(\r\n                \"r\",\r\n                event,\r\n                YKColorPicker._lt,\r\n                255,\r\n                YKColorPicker._add,\r\n                1,\r\n                3\r\n              );\r\n            } else if (caret < 3) {\r\n              this._updateHEXColorSection(\r\n                \"g\",\r\n                event,\r\n                YKColorPicker._lt,\r\n                255,\r\n                YKColorPicker._add,\r\n                3,\r\n                5\r\n              );\r\n            } else if ((caret <= 4 && length <= 4) || caret < 4) {\r\n              this._updateHEXColorSection(\r\n                \"b\",\r\n                event,\r\n                YKColorPicker._lt,\r\n                255,\r\n                YKColorPicker._add,\r\n                5,\r\n                7\r\n              );\r\n            } else if (caret <= 5) {\r\n              this._updateHEXAlphaSection(\r\n                event,\r\n                YKColorPicker._lt,\r\n                1,\r\n                YKColorPicker._add\r\n              );\r\n            }\r\n          } else {\r\n            if (caret < 3) {\r\n              this._updateHEXColorSection(\r\n                \"r\",\r\n                event,\r\n                YKColorPicker._lt,\r\n                255,\r\n                YKColorPicker._add,\r\n                1,\r\n                3\r\n              );\r\n            } else if (caret < 5) {\r\n              this._updateHEXColorSection(\r\n                \"g\",\r\n                event,\r\n                YKColorPicker._lt,\r\n                255,\r\n                YKColorPicker._add,\r\n                3,\r\n                5\r\n              );\r\n            } else if ((caret <= 7 && length == 7) || caret < 7) {\r\n              this._updateHEXColorSection(\r\n                \"b\",\r\n                event,\r\n                YKColorPicker._lt,\r\n                255,\r\n                YKColorPicker._add,\r\n                5,\r\n                7\r\n              );\r\n            } else if (caret <= 9) {\r\n              this._updateHEXAlphaSection(\r\n                event,\r\n                YKColorPicker._lt,\r\n                1,\r\n                YKColorPicker._add\r\n              );\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n        {\r\n          if (\r\n            !/^#([0-9a-f]{3}|[0-9a-f]{4}|[0-9a-f]{6}|[0-9a-f]{8})$/i.test(\r\n              target.value\r\n            )\r\n          ) {\r\n            target.value = this._color.hex;\r\n          }\r\n          const caret = this._getCaretPosition(target);\r\n          const length = target.value.length;\r\n          if (length <= 5) {\r\n            if (caret < 2) {\r\n              this._updateHEXColorSection(\r\n                \"r\",\r\n                event,\r\n                YKColorPicker._gt,\r\n                0,\r\n                YKColorPicker._sub,\r\n                1,\r\n                3\r\n              );\r\n            } else if (caret < 3) {\r\n              this._updateHEXColorSection(\r\n                \"g\",\r\n                event,\r\n                YKColorPicker._gt,\r\n                0,\r\n                YKColorPicker._sub,\r\n                3,\r\n                5\r\n              );\r\n            } else if ((caret <= 4 && length <= 4) || caret < 4) {\r\n              this._updateHEXColorSection(\r\n                \"b\",\r\n                event,\r\n                YKColorPicker._gt,\r\n                0,\r\n                YKColorPicker._sub,\r\n                5,\r\n                7\r\n              );\r\n            } else if (caret <= 5) {\r\n              this._updateHEXAlphaSection(\r\n                event,\r\n                YKColorPicker._gt,\r\n                0,\r\n                YKColorPicker._sub\r\n              );\r\n            }\r\n          } else {\r\n            if (caret < 3) {\r\n              this._updateHEXColorSection(\r\n                \"r\",\r\n                event,\r\n                YKColorPicker._gt,\r\n                0,\r\n                YKColorPicker._sub,\r\n                1,\r\n                3\r\n              );\r\n            } else if (caret < 5) {\r\n              this._updateHEXColorSection(\r\n                \"g\",\r\n                event,\r\n                YKColorPicker._gt,\r\n                0,\r\n                YKColorPicker._sub,\r\n                3,\r\n                5\r\n              );\r\n            } else if ((caret <= 7 && length == 7) || caret < 7) {\r\n              this._updateHEXColorSection(\r\n                \"b\",\r\n                event,\r\n                YKColorPicker._gt,\r\n                0,\r\n                YKColorPicker._sub,\r\n                5,\r\n                7\r\n              );\r\n            } else if (caret <= 9) {\r\n              this._updateHEXAlphaSection(\r\n                event,\r\n                YKColorPicker._gt,\r\n                0,\r\n                YKColorPicker._sub\r\n              );\r\n            }\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onInputHEX(event: Event) {\r\n    const rgb = YKColorParser.HEXtoRGBA(\r\n      (event.target as HTMLInputElement).value.trim()\r\n    );\r\n    if (rgb != null) {\r\n      const { r, g, b, a } = rgb;\r\n      this._color.a = a;\r\n      this._color.rgb = { r, g, b };\r\n      this._color.hex = YKColorParser.RGBAtoHEX(r, g, b, a);\r\n      this._color.hsv = YKColorParser.RGBtoHSV(r, g, b);\r\n      this._updateColorPreview(true);\r\n      this._updateHueThumb();\r\n      this._updateOpacityThumb();\r\n      this._updateCursorThumb();\r\n    }\r\n  }\r\n\r\n  private _onChangeInputHEX(event: Event) {\r\n    (event.target as HTMLInputElement).value = this._color.hex;\r\n  }\r\n\r\n  private _onKeyDownInputA(event: KeyboardEvent) {\r\n    const { target, key } = event;\r\n    switch (key) {\r\n      case \"ArrowUp\":\r\n        {\r\n          switch (this._currentRepresentation) {\r\n            case YKColorPickerMode.RGB:\r\n              {\r\n                let { r, g, b } = this._color.getRGB();\r\n                if (r < 255) {\r\n                  this._color.rgb.r = parseInt(\r\n                    ((target as HTMLInputElement).value = (++r).toString())\r\n                  );\r\n                  this._color.hsv = YKColorParser.RGBtoHSV(r, g, b);\r\n                  this._rgbUpdateView();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSV:\r\n            case YKColorPickerMode.HSL:\r\n              {\r\n                let { h } = this._color.hsv;\r\n                h = roundToRange(h, 0, 360);\r\n                if (h < 360) {\r\n                  (target as HTMLInputElement).value = ++h + \"°\";\r\n                  this._color.hsv.h = this._color.hsl.h = h;\r\n                  this._updateColorPreview(true);\r\n                  this._updateHueThumb();\r\n                }\r\n              }\r\n              break;\r\n          }\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n        {\r\n          switch (this._currentRepresentation) {\r\n            case YKColorPickerMode.RGB:\r\n              {\r\n                let { r, g, b } = this._color.getRGB();\r\n                if (r > 0) {\r\n                  this._color.rgb.r = parseInt(\r\n                    ((target as HTMLInputElement).value = (--r).toString())\r\n                  );\r\n                  this._color.hsv = YKColorParser.RGBtoHSV(r, g, b);\r\n                  this._rgbUpdateView();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSV:\r\n            case YKColorPickerMode.HSL:\r\n              {\r\n                let { h } = this._color.hsv;\r\n                h = roundToRange(h, 0, 360);\r\n                if (h > 0) {\r\n                  (target as HTMLInputElement).value = --h + \"°\";\r\n                  this._color.hsv.h = this._color.hsl.h = h;\r\n                  this._updateColorPreview(true);\r\n                  this._updateHueThumb();\r\n                }\r\n              }\r\n              break;\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onInputA(event: Event) {\r\n    const value = parseInt((event.target as HTMLInputElement).value || \"0\");\r\n    if (/^(\\d{1,3})(°?)$/.test(value.toString())) {\r\n      switch (this._currentRepresentation) {\r\n        case YKColorPickerMode.RGB:\r\n          {\r\n            const { g, b } = this._color.getRGB();\r\n            if (!isNaN(value) && value >= 0 && value <= 255) {\r\n              this._color.rgb.r = value;\r\n              this._color.hsv = YKColorParser.RGBtoHSV(value, g, b);\r\n              this._updateColorPreview(true);\r\n              this._updateHueThumb();\r\n              this._updateCursorThumb();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case YKColorPickerMode.HSV:\r\n        case YKColorPickerMode.HSL:\r\n          {\r\n            if (!isNaN(value) && value >= 0 && value <= 360) {\r\n              this._color.hsv.h = this._color.hsl.h = value;\r\n              this._updateColorPreview(true);\r\n              this._updateHueThumb();\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onChangeInputA(event: Event) {\r\n    let value = (event.target as HTMLInputElement).value;\r\n    switch (this._currentRepresentation) {\r\n      case YKColorPickerMode.RGB:\r\n        {\r\n          value = roundToRange(this._color.rgb.r, 0, 255).toString();\r\n        }\r\n        break;\r\n\r\n      case YKColorPickerMode.HSV:\r\n      case YKColorPickerMode.HSL:\r\n        {\r\n          value = `${this._color.getHSV().h}°`;\r\n        }\r\n        break;\r\n    }\r\n    (event.target as HTMLInputElement).value = value;\r\n  }\r\n\r\n  private _onKeyDownInputB(event: KeyboardEvent) {\r\n    const { target, key } = event;\r\n    switch (key) {\r\n      case \"ArrowUp\":\r\n        {\r\n          switch (this._currentRepresentation) {\r\n            case YKColorPickerMode.RGB:\r\n              {\r\n                let { r, g, b } = this._color.getRGB();\r\n                if (g < 255) {\r\n                  this._color.rgb.g = parseInt(\r\n                    ((target as HTMLInputElement).value = (++g).toString())\r\n                  );\r\n                  this._color.hsv = YKColorParser.RGBtoHSV(r, g, b);\r\n                  this._rgbUpdateView();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSV:\r\n              {\r\n                let { s } = this._color.getHSV();\r\n                if (s < 100) {\r\n                  (target as HTMLInputElement).value = ++s + \"%\";\r\n                  this._color.hsv.s = s;\r\n                  this._updateColorPreview(true);\r\n                  this._updateCursorThumb();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSL:\r\n              {\r\n                const { h, s, l } = this._color.getHSL();\r\n                let hsl_s = s;\r\n                if (hsl_s < 100) {\r\n                  ++hsl_s;\r\n\r\n                  this._color.hsl.s = hsl_s;\r\n                  this._color.hsv = YKColorParser.HSLtoHSV(h, hsl_s, l);\r\n                  this._color.hsl.l = this.getHSL().l;\r\n\r\n                  this._updateColorPreview(true);\r\n                  this._updateCursorThumb();\r\n\r\n                  (target as HTMLInputElement).value = hsl_s + \"%\";\r\n                  this._dom.inputC.value = this._color.hsl.l + \"%\";\r\n                }\r\n              }\r\n              break;\r\n          }\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n        {\r\n          switch (this._currentRepresentation) {\r\n            case YKColorPickerMode.RGB:\r\n              {\r\n                let { r, g, b } = this._color.getRGB();\r\n                if (g > 0) {\r\n                  this._color.rgb.g = parseInt(\r\n                    ((target as HTMLInputElement).value = (--g).toString())\r\n                  );\r\n                  this._color.hsv = YKColorParser.RGBtoHSV(r, g, b);\r\n                  this._rgbUpdateView();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSV:\r\n              {\r\n                let { s } = this._color.getHSV();\r\n                if (s > 0) {\r\n                  (target as HTMLInputElement).value = --s + \"%\";\r\n                  this._color.hsv.s = s;\r\n                  this._updateColorPreview(true);\r\n                  this._updateCursorThumb();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSL:\r\n              {\r\n                const { h, s, l } = this._color.getHSL();\r\n                let hsl_s = s;\r\n                if (hsl_s > 0) {\r\n                  --hsl_s;\r\n\r\n                  this._color.hsl.s = hsl_s;\r\n                  this._color.hsv = YKColorParser.HSLtoHSV(h, hsl_s, l);\r\n                  this._color.hsl.l = this.getHSL().l;\r\n\r\n                  this._updateColorPreview(true);\r\n                  this._updateCursorThumb();\r\n\r\n                  (target as HTMLInputElement).value = hsl_s + \"%\";\r\n                  this._dom.inputC.value = this._color.hsl.l + \"%\";\r\n                }\r\n              }\r\n              break;\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onInputB(event: Event) {\r\n    const value = parseInt((event.target as HTMLInputElement).value || \"0\");\r\n    if (/^(\\d{1,3})(%?)$/.test(value.toString())) {\r\n      switch (this._currentRepresentation) {\r\n        case YKColorPickerMode.RGB:\r\n          {\r\n            const { r, b } = this._color.getRGB();\r\n            if (!isNaN(value) && value >= 0 && value <= 255) {\r\n              this._color.rgb.g = value;\r\n              this._color.hsv = YKColorParser.RGBtoHSV(r, value, b);\r\n              this._updateColorPreview(true);\r\n              this._updateHueThumb();\r\n              this._updateCursorThumb();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case YKColorPickerMode.HSV:\r\n          {\r\n            if (!isNaN(value) && value >= 0 && value <= 100) {\r\n              this._color.hsv.s = value;\r\n              this._updateColorPreview(true);\r\n              this._updateCursorThumb();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case YKColorPickerMode.HSL:\r\n          {\r\n            const { h, l } = this._color.getHSL();\r\n            if (!isNaN(value) && value >= 0 && value <= 100) {\r\n              this._color.hsv = YKColorParser.HSLtoHSV(h, value, l);\r\n              this._color.hsl = this._color.toHSL();\r\n              this._updateColorPreview(true);\r\n              this._updateCursorThumb();\r\n\r\n              this._dom.inputC.value = Math.round(this._color.hsl.l) + \"%\";\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onChangeInputB(event: Event) {\r\n    let value: string | number = (event.target as HTMLInputElement).value;\r\n    switch (this._currentRepresentation) {\r\n      case YKColorPickerMode.RGB:\r\n        {\r\n          value = this._color.getRGB().g;\r\n        }\r\n        break;\r\n\r\n      case YKColorPickerMode.HSV:\r\n        {\r\n          value = `${this._color.getHSV().s}%`;\r\n        }\r\n        break;\r\n\r\n      case YKColorPickerMode.HSL:\r\n        {\r\n          value = `${this._color.getHSL().s}%`;\r\n        }\r\n        break;\r\n    }\r\n    (event.target as HTMLInputElement).value = value as string;\r\n  }\r\n\r\n  private _onKeyDownInputC(event: KeyboardEvent) {\r\n    const { target, key } = event;\r\n    switch (key) {\r\n      case \"ArrowUp\":\r\n        {\r\n          switch (this._currentRepresentation) {\r\n            case YKColorPickerMode.RGB:\r\n              {\r\n                let { r, g, b } = this._color.getRGB();\r\n                if (b < 255) {\r\n                  this._color.rgb.b = parseInt(\r\n                    ((target as HTMLInputElement).value = (++b).toString())\r\n                  );\r\n                  this._color.hsv = YKColorParser.RGBtoHSV(r, g, b);\r\n                  this._rgbUpdateView();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSV:\r\n              {\r\n                let { v } = this._color.getHSV();\r\n                if (v < 100) {\r\n                  (target as HTMLInputElement).value = ++v + \"%\";\r\n                  this._color.hsv.v = v;\r\n                  this._updateColorPreview(true);\r\n                  this._updateCursorThumb();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSL:\r\n              {\r\n                const { h, s, l } = this._color.getHSL();\r\n                let hsl_l = l;\r\n                if (hsl_l < 100) {\r\n                  ++hsl_l;\r\n\r\n                  this._color.hsl.l = hsl_l;\r\n                  this._color.hsv = YKColorParser.HSLtoHSV(h, s, hsl_l);\r\n                  this._color.hsl.s = this.getHSL().s;\r\n\r\n                  this._updateColorPreview(true);\r\n                  this._updateCursorThumb();\r\n\r\n                  (target as HTMLInputElement).value = hsl_l + \"%\";\r\n                  this._dom.inputB.value = this._color.hsl.s + \"%\";\r\n                }\r\n              }\r\n              break;\r\n          }\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n        {\r\n          switch (this._currentRepresentation) {\r\n            case YKColorPickerMode.RGB:\r\n              {\r\n                let { r, g, b } = this._color.getRGB();\r\n                if (b > 0) {\r\n                  this._color.rgb.b = parseInt(\r\n                    ((target as HTMLInputElement).value = (--b).toString())\r\n                  );\r\n                  this._color.hsv = YKColorParser.RGBtoHSV(r, g, b);\r\n                  this._rgbUpdateView();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSV:\r\n              {\r\n                let { v } = this._color.getHSV();\r\n                if (v > 0) {\r\n                  (target as HTMLInputElement).value = --v + \"%\";\r\n                  this._color.hsv.v = v;\r\n                  this._updateColorPreview(true);\r\n                  this._updateCursorThumb();\r\n                }\r\n              }\r\n              break;\r\n\r\n            case YKColorPickerMode.HSL:\r\n              {\r\n                const { h, s, l } = this._color.getHSL();\r\n                let hsl_l = l;\r\n                if (l > 0) {\r\n                  --hsl_l;\r\n\r\n                  this._color.hsl.l = hsl_l;\r\n                  this._color.hsv = YKColorParser.HSLtoHSV(h, s, hsl_l);\r\n                  this._color.hsl.s = this.getHSL().s;\r\n\r\n                  this._updateColorPreview(true);\r\n                  this._updateCursorThumb();\r\n\r\n                  (target as HTMLInputElement).value = hsl_l + \"%\";\r\n                  this._dom.inputB.value = this._color.hsl.s + \"%\";\r\n                }\r\n              }\r\n              break;\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onInputC(event: Event) {\r\n    const value = parseInt((event.target as HTMLInputElement).value || \"0\");\r\n    if (/^(\\d{1,3})(%?)$/.test(value.toString())) {\r\n      switch (this._currentRepresentation) {\r\n        case YKColorPickerMode.RGB:\r\n          {\r\n            const { r, g } = this._color.getRGB();\r\n            if (!isNaN(value) && value >= 0 && value <= 255) {\r\n              this._color.rgb.b = value;\r\n              this._color.hsv = YKColorParser.RGBtoHSV(r, g, value);\r\n              this._updateColorPreview(true);\r\n              this._updateHueThumb();\r\n              this._updateCursorThumb();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case YKColorPickerMode.HSV:\r\n          {\r\n            if (!isNaN(value) && value >= 0 && value <= 100) {\r\n              this._color.hsv.v = value;\r\n              this._updateColorPreview(true);\r\n              this._updateCursorThumb();\r\n            }\r\n          }\r\n          break;\r\n\r\n        case YKColorPickerMode.HSL:\r\n          {\r\n            const { h, s } = this._color.getHSL();\r\n            if (!isNaN(value) && value >= 0 && value <= 100) {\r\n              this._color.hsv = YKColorParser.HSLtoHSV(h, s, value);\r\n\r\n              this._color.hsl = this._color.toHSL();\r\n              this._updateColorPreview(true);\r\n              this._updateCursorThumb();\r\n\r\n              this._dom.inputB.value = Math.round(this._color.hsl.s) + \"%\";\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onChangeInputC(event: Event) {\r\n    let value: string | number = (event.target as HTMLInputElement).value;\r\n    switch (this._currentRepresentation) {\r\n      case YKColorPickerMode.RGB:\r\n        {\r\n          value = this._color.getRGB().b;\r\n        }\r\n        break;\r\n\r\n      case YKColorPickerMode.HSV:\r\n        {\r\n          value = `${this._color.getHSV().v}%`;\r\n        }\r\n        break;\r\n\r\n      case YKColorPickerMode.HSL:\r\n        {\r\n          value = `${this._color.getHSL().l}%`;\r\n        }\r\n        break;\r\n    }\r\n    (event.target as HTMLInputElement).value = value as string;\r\n  }\r\n\r\n  private _onClickCopyColor() {\r\n    if (this._copyTimeout) {\r\n      clearTimeout(this._copyTimeout);\r\n    }\r\n    const input = document.createElement(\"input\");\r\n    input.style.position = \"absolute\";\r\n    input.style.left = \"-99999px\";\r\n    input.style.top = \"-99999px\";\r\n    input.value = this._getColorText() || \"\";\r\n    document.body.appendChild(input);\r\n    input.select();\r\n\r\n    try {\r\n      document.execCommand(\"copy\");\r\n      this._attachCheckIcon();\r\n      this._dom.copyColor.focus();\r\n      this._options.onCopy(this);\r\n\r\n      this._copyTimeout = setTimeout(() => {\r\n        this._attachCopyIcon();\r\n        this._copyTimeout = null;\r\n      }, 600);\r\n    } catch (err) {\r\n      document.body.removeChild(input);\r\n      throw new Error(\"YKColorPicker:: Failed to copy color.\\n\" + err);\r\n    }\r\n  }\r\n\r\n  private _onMouseDownHueSlider(event: MouseEvent) {\r\n    event.preventDefault(); // prevent default to set focus on the thumb\r\n    this._dc = true;\r\n    attachEvent(document, \"pointermove\", this._onMouseMoveHueSliderBind);\r\n    attachEvent(document, \"pointerup\", this._onMouseUpHueSliderBind);\r\n    this._dom.hueThumb.focus();\r\n    this._onMouseMoveHueSliderBind(event);\r\n  }\r\n\r\n  private _onMouseUpHueSlider(event: MouseEvent) {\r\n    document.removeEventListener(\"pointermove\", this._onMouseMoveHueSliderBind);\r\n    document.removeEventListener(\"pointerup\", this._onMouseUpHueSliderBind);\r\n    if (this._dom.overlayWrapper.contains(event.target)) {\r\n      this._dc = false;\r\n    }\r\n  }\r\n\r\n  private _onMouseMoveHueSlider(event: MouseEvent) {\r\n    const { hueSlider, hueThumb } = this._dom;\r\n    const sliderRect = hueSlider.getBoundingClientRect();\r\n    const sliderWidth = sliderRect.width;\r\n    let thumbX = event.clientX - sliderRect.left;\r\n\r\n    if (thumbX < 0) {\r\n      thumbX = 0;\r\n    }\r\n    if (thumbX > sliderWidth) {\r\n      thumbX = sliderWidth;\r\n    }\r\n\r\n    this._color.hsv.h = (thumbX / sliderRect.width) * 360;\r\n    hueThumb.style.translate = `${thumbX}px`;\r\n\r\n    this._updateSettingsView();\r\n  }\r\n\r\n  private _onMouseDownOpacitySlider(event: MouseEvent) {\r\n    event.preventDefault(); // prevent default to set focus on the thumb\r\n    this._dc = true;\r\n    attachEvent(document, \"pointermove\", this._onMouseMoveOpacitySliderBind);\r\n    attachEvent(document, \"pointerup\", this._onMouseUpOpacitySliderBind);\r\n    this._dom.opacityThumb.focus();\r\n    this._onMouseMoveOpacitySliderBind(event);\r\n  }\r\n\r\n  private _onMouseUpOpacitySlider(event: MouseEvent) {\r\n    document.removeEventListener(\r\n      \"pointermove\",\r\n      this._onMouseMoveOpacitySliderBind\r\n    );\r\n    document.removeEventListener(\"pointerup\", this._onMouseUpOpacitySliderBind);\r\n    if (this._dom.overlayWrapper.contains(event.target)) {\r\n      this._dc = false;\r\n    }\r\n  }\r\n\r\n  private _onMouseMoveOpacitySlider(event: MouseEvent) {\r\n    const { opacitySlider, opacityThumb } = this._dom;\r\n    const opacitySliderRect = opacitySlider.getBoundingClientRect();\r\n    const sliderWidth = opacitySliderRect.width;\r\n    let thumbX = event.clientX - opacitySliderRect.left;\r\n    opacityThumb.focus();\r\n\r\n    if (thumbX < 0) {\r\n      thumbX = 0;\r\n    }\r\n    if (thumbX > sliderWidth) {\r\n      thumbX = sliderWidth;\r\n    }\r\n\r\n    opacityThumb.style.translate = `${thumbX}px`;\r\n    this._updateOpacityValue(thumbX / sliderWidth);\r\n  }\r\n\r\n  private _onKeyDownHueSlider(event: KeyboardEvent) {\r\n    const { key } = event;\r\n    switch (key) {\r\n      case \"ArrowUp\":\r\n      case \"ArrowRight\":\r\n        {\r\n          const { hueThumb, hueSlider } = this._dom;\r\n          let position = parseInt(hueThumb.style.translate);\r\n          if (!isNaN(position) && position < hueSlider.offsetWidth) {\r\n            hueThumb.style.translate = `${++position}px`;\r\n            this._color.hsv.h = (position / hueSlider.offsetWidth) * 360;\r\n            this._updateSettingsView();\r\n          }\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n\r\n      case \"ArrowDown\":\r\n      case \"ArrowLeft\":\r\n        {\r\n          const { hueThumb, hueSlider } = this._dom;\r\n          let position = parseInt(hueThumb.style.translate);\r\n          if (!isNaN(position) && position > 0) {\r\n            hueThumb.style.translate = `${--position}px`;\r\n            this._color.hsv.h = (position / hueSlider.offsetWidth) * 360;\r\n            this._updateSettingsView();\r\n          }\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onKeyDownOpacitySlider(event: KeyboardEvent) {\r\n    const { key } = event;\r\n    switch (key) {\r\n      case \"ArrowUp\":\r\n      case \"ArrowRight\":\r\n        {\r\n          const { opacityThumb, opacitySlider } = this._dom;\r\n          let position = parseInt(opacityThumb.style.translate);\r\n          if (!isNaN(position) && position < opacitySlider.offsetWidth) {\r\n            opacityThumb.style.translate = `${++position}px`;\r\n            this._updateOpacityValue(position / opacitySlider.offsetWidth);\r\n          }\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n\r\n      case \"ArrowDown\":\r\n      case \"ArrowLeft\":\r\n        {\r\n          const { opacityThumb, opacitySlider } = this._dom;\r\n          let position = parseInt(opacityThumb.style.translate);\r\n          if (!isNaN(position) && position > 0) {\r\n            opacityThumb.style.translate = `${--position}px`;\r\n            this._updateOpacityValue(position / opacitySlider.offsetWidth);\r\n          }\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onKeyUpClose(event: KeyboardEvent) {\r\n    const { target, key } = event;\r\n    if (this._targetKeydownOpen && key == \"Enter\") {\r\n      this._targetKeydownOpen = false;\r\n      return;\r\n    }\r\n\r\n    if (\r\n      key == \"Enter\" &&\r\n      this._isOpen &&\r\n      ![this._dom.copyColor, this._dom.btnSwitch].includes(target)\r\n    ) {\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    if (key == \"Escape\") {\r\n      if (this._prevColor != this.getHEX()) {\r\n        this.setColor(this._prevColor);\r\n      }\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  private _onResizeScrollWindow(event: Event) {\r\n    const { type } = event;\r\n    const { target } = this._dom;\r\n\r\n    if (target == null) {\r\n      return;\r\n    }\r\n\r\n    const { closeOnScroll, closeOnResize } = this._options;\r\n    if (\r\n      (type == \"scroll\" && closeOnScroll) ||\r\n      (type == \"resize\" && closeOnResize)\r\n    ) {\r\n      this.close();\r\n    } else {\r\n      if (!YKColorPicker._isTargetInViewport(target)) {\r\n        this.close();\r\n        return;\r\n      }\r\n      this._setPositionAxis(this._getPositionAxis());\r\n    }\r\n  }\r\n\r\n  private _removeWindowEvents() {\r\n    window.removeEventListener(\"resize\", this._onResizeScrollWindowBind);\r\n    window.removeEventListener(\"scroll\", this._onResizeScrollWindowBind);\r\n    document.removeEventListener(\"keyup\", this._onKeyUpCloseBind);\r\n    document.removeEventListener(\"click\", this._onClickCloseBind);\r\n  }\r\n\r\n  private _getCursorPosition(clientX: number, clientY: number) {\r\n    const paletteRect = this._dom.palette.getBoundingClientRect();\r\n    let xAxis = clientX - paletteRect.left;\r\n    let yAxis = clientY - paletteRect.top;\r\n\r\n    if (xAxis < 0) {\r\n      xAxis = 0;\r\n    } else if (xAxis > paletteRect.width) {\r\n      xAxis = paletteRect.width;\r\n    }\r\n    if (yAxis < 0) {\r\n      yAxis = 0;\r\n    } else if (yAxis > paletteRect.height) {\r\n      yAxis = paletteRect.height;\r\n    }\r\n\r\n    return {\r\n      x: xAxis,\r\n      y: yAxis,\r\n    };\r\n  }\r\n\r\n  private _updateHEXColor() {\r\n    const { r, g, b } = (this._color.rgb = this._color.toRGB());\r\n    this._color.hex = YKColorParser.RGBAtoHEX(r, g, b, this._color.a);\r\n  }\r\n\r\n  private _getColorText() {\r\n    switch (this._currentRepresentation) {\r\n      case YKColorPickerMode.RGB:\r\n        const { r, g, b } = this._color.getRGB();\r\n        return `rgba(${r}, ${g}, ${b}, ${this._color.a})`;\r\n\r\n      case YKColorPickerMode.HSV: {\r\n        const { h, s, v } = this._color.getHSV();\r\n        return `hsva(${h}, ${s}%, ${v}%, ${this._color.a})`;\r\n      }\r\n\r\n      case YKColorPickerMode.HSL: {\r\n        const { h, s, l } = this._color.getHSL();\r\n        return `hsla(${h}, ${s}%, ${l}%, ${this._color.a})`;\r\n      }\r\n\r\n      case YKColorPickerMode.HEX:\r\n        return this.getHEX();\r\n    }\r\n  }\r\n\r\n  private _getCaretPosition(target: HTMLInputElement) {\r\n    let position = target.selectionStart || 0;\r\n    const length = target.value.length;\r\n    if (position > length) {\r\n      position = length;\r\n    }\r\n    return position;\r\n  }\r\n\r\n  private _getPositionAxis(): Point {\r\n    const { position, positionFallback } = this._options;\r\n    const { target } = this._dom;\r\n    if (!target || !position || !positionFallback) {\r\n      return { x: 0, y: 0 };\r\n    }\r\n    const targetRect = target.getBoundingClientRect();\r\n    const colorPickerRect = this._dom.overlayWrapper.getBoundingClientRect();\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const scrollLeft = document.documentElement.scrollLeft;\r\n    const offset = 6;\r\n    let _position = position;\r\n\r\n    const _stateSpaceInTop = YKColorPicker._enoughSpace(\r\n      () => scrollTop + targetRect.top,\r\n      () => targetRect.top,\r\n      colorPickerRect.height + offset\r\n    );\r\n    const _stateSpaceInBottom = YKColorPicker._enoughSpace(\r\n      () =>\r\n        YKColorPicker._getPageHeight() -\r\n        (scrollTop + targetRect.top + targetRect.height),\r\n      () => window.innerHeight - (targetRect.top + targetRect.height),\r\n      colorPickerRect.height + offset\r\n    );\r\n    const _stateSpaceInLeft = YKColorPicker._enoughSpace(\r\n      () => scrollLeft + targetRect.left,\r\n      () => targetRect.left,\r\n      colorPickerRect.width + offset\r\n    );\r\n    const _stateSpaceInRight = YKColorPicker._enoughSpace(\r\n      () =>\r\n        YKColorPicker._getPageWidth() -\r\n        (scrollLeft + targetRect.left + targetRect.width),\r\n      () => window.innerWidth - (targetRect.left + targetRect.width),\r\n      colorPickerRect.width + offset\r\n    );\r\n\r\n    const states: any = {\r\n      t: _stateSpaceInTop,\r\n      b: _stateSpaceInBottom,\r\n      l: _stateSpaceInLeft,\r\n      r: _stateSpaceInRight,\r\n    };\r\n    let positions = \"\";\r\n\r\n    for (let i = 0; i < positionFallback.length; i++) {\r\n      positions += positionFallback[i] + states[positionFallback[i]];\r\n    }\r\n\r\n    let bestPositions = \"\";\r\n    let secondPositions = \"\";\r\n\r\n    for (let i = 1; i < positions.length; i += 2) {\r\n      const state = positions[i];\r\n      if (state == \"2\") {\r\n        bestPositions = bestPositions + positions[i - 1];\r\n      }\r\n      if (state == \"1\") {\r\n        secondPositions = secondPositions + positions[i - 1];\r\n      }\r\n    }\r\n\r\n    if (bestPositions != \"\") {\r\n      if (bestPositions.includes(_position) == false) {\r\n        _position = bestPositions[0] as YKColorPickerPosition;\r\n      }\r\n    } else if (secondPositions != \"\") {\r\n      if (secondPositions.includes(_position) == false) {\r\n        _position = secondPositions[0] as YKColorPickerPosition;\r\n      }\r\n    } else {\r\n      _position = YKColorPickerPosition.BOTTOM;\r\n    }\r\n\r\n    let x_axis = 0;\r\n    let y_axis = 0;\r\n\r\n    switch (_position) {\r\n      case YKColorPickerPosition.TOP:\r\n        y_axis = targetRect.top - colorPickerRect.height - offset;\r\n        x_axis =\r\n          targetRect.left + targetRect.width / 2 - colorPickerRect.width / 2;\r\n        break;\r\n\r\n      case YKColorPickerPosition.BOTTOM:\r\n        y_axis = targetRect.top + targetRect.height + offset;\r\n        x_axis =\r\n          targetRect.left + targetRect.width / 2 - colorPickerRect.width / 2;\r\n        break;\r\n\r\n      case YKColorPickerPosition.LEFT:\r\n        y_axis =\r\n          targetRect.top + targetRect.height / 2 - colorPickerRect.height / 2;\r\n        x_axis = targetRect.left - colorPickerRect.width - offset;\r\n        break;\r\n\r\n      case YKColorPickerPosition.RIGHT:\r\n        y_axis =\r\n          targetRect.top + targetRect.height / 2 - colorPickerRect.height / 2;\r\n        x_axis = targetRect.left + targetRect.width + offset;\r\n        break;\r\n    }\r\n\r\n    // Make sure the color picker won't go beyond viewport by adjusting the x and y axis.\r\n    // Calculate scrollbar for x and y.\r\n    const xScrollbar = window.innerWidth - document.documentElement.clientWidth;\r\n    const yScrollbar =\r\n      window.innerHeight - document.documentElement.clientHeight;\r\n\r\n    if (window.innerWidth - xScrollbar < x_axis + colorPickerRect.width) {\r\n      x_axis -= x_axis + colorPickerRect.width - window.innerWidth + xScrollbar;\r\n    }\r\n    if (window.innerHeight - yScrollbar < y_axis + colorPickerRect.height) {\r\n      y_axis -=\r\n        y_axis + colorPickerRect.height - window.innerHeight + yScrollbar;\r\n    }\r\n\r\n    x_axis = Math.max(x_axis, 0);\r\n    y_axis = Math.max(y_axis, 0);\r\n\r\n    return {\r\n      x: x_axis,\r\n      y: y_axis,\r\n    };\r\n  }\r\n\r\n  private _setPositionAxis(axis: Point) {\r\n    const { x, y } = axis;\r\n    this._dom.overlayWrapper.style.top = `${y}px`;\r\n    this._dom.overlayWrapper.style.left = `${x}px`;\r\n  }\r\n\r\n  private _updateRepresentation(value: YKColorPickerMode) {\r\n    this._currentRepresentation = value;\r\n    this._updateInputs();\r\n    if (this._options.onRepresentationChange) {\r\n      this._options.onRepresentationChange(this);\r\n    }\r\n  }\r\n\r\n  private _updateTheme(theme: \"light\" | \"dark\") {\r\n    this._dom.overlayWrapper.classList.remove(\r\n      \"yk-overlay-wrapper--light\",\r\n      \"yk-overlay-wrapper--dark\"\r\n    );\r\n\r\n    if (theme !== \"light\" && theme !== \"dark\") {\r\n      throw new Error(\"YKColorPicker:: Theme must be light or dark\");\r\n    }\r\n\r\n    this._dom.overlayWrapper.classList.add(`yk-overlay-wrapper--${theme}`);\r\n  }\r\n\r\n  private _updateTarget(target: HTMLElement | string | undefined | null) {\r\n    let _target: HTMLElement | null = null;\r\n    if (typeof target == \"string\") {\r\n      _target = document.querySelector(target);\r\n    } else if (target && target.nodeType == Node.ELEMENT_NODE) {\r\n      _target = target;\r\n    } else if (target !== null && target !== undefined) {\r\n      throw new Error(\r\n        \"YKColorPicker:: target must be a string or an HTMLElement\"\r\n      );\r\n    }\r\n\r\n    const prevTarget = this._dom.target;\r\n\r\n    if (prevTarget != null) {\r\n      prevTarget.removeEventListener(\"click\", this._onClickTargetBind);\r\n    }\r\n    this._dom[\"target\"] = _target;\r\n\r\n    if (this._dom.target != null) {\r\n      attachEvent(this._dom.target, \"click\", this._onClickTargetBind);\r\n    }\r\n\r\n    this._updatePosition();\r\n\r\n    this._options.onTargetChange(this, prevTarget);\r\n  }\r\n\r\n  private static _isTargetInViewport(target: HTMLElement | undefined) {\r\n    if (!target) {\r\n      return false;\r\n    }\r\n\r\n    const rect = target.getBoundingClientRect();\r\n    return (\r\n      rect.top >= 0 &&\r\n      rect.left >= 0 &&\r\n      rect.bottom <=\r\n        (window.innerHeight || document.documentElement.clientHeight) &&\r\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n    );\r\n  }\r\n\r\n  private static _getPageHeight() {\r\n    return Math.max(\r\n      document.body.scrollHeight,\r\n      document.documentElement.scrollHeight,\r\n      document.body.offsetHeight,\r\n      document.documentElement.offsetHeight,\r\n      document.body.clientHeight,\r\n      document.documentElement.clientHeight\r\n    );\r\n  }\r\n\r\n  private static _getPageWidth() {\r\n    return Math.max(\r\n      document.body.scrollWidth,\r\n      document.documentElement.scrollWidth,\r\n      document.body.offsetWidth,\r\n      document.documentElement.offsetWidth,\r\n      document.body.clientWidth,\r\n      document.documentElement.clientWidth\r\n    );\r\n  }\r\n\r\n  private static _enoughSpace(\r\n    condition1: () => number,\r\n    condition2: () => number,\r\n    boxSize: number\r\n  ) {\r\n    if (condition1() >= boxSize) {\r\n      if (condition2() >= boxSize) {\r\n        return 2;\r\n      }\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private static _buildOptions(\r\n    baseOptions: __YKColorPickerOptions,\r\n    options: YKColorPickerOptions\r\n  ): __YKColorPickerOptions {\r\n    const _options: any = {};\r\n    const keys: string[] = Object.keys(baseOptions);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key: string = keys[i];\r\n      if (options.hasOwnProperty(key) == true) {\r\n        (_options as any)[key] = (options as any)[key];\r\n      } else {\r\n        (_options as any)[key] = (baseOptions as any)[key];\r\n      }\r\n    }\r\n    return _options;\r\n  }\r\n\r\n  private static _lt(a: number, b: number) {\r\n    return a < b;\r\n  }\r\n\r\n  private static _gt(a: number, b: number) {\r\n    return a > b;\r\n  }\r\n\r\n  private static _add(a: number, b: number) {\r\n    return a + b;\r\n  }\r\n\r\n  private static _sub(a: number, b: number) {\r\n    return a - b;\r\n  }\r\n}\r\n"],"names":["hexPad2","value","createElement","tag","classList","attributes","el","key","attachEvent","element","eventName","eventHandler","roundToRange","min","max","YKColorParser","color","rgb","_rgb","h","s","v","r","g","b","a","regexRGB","splitColor","i","d","l","hsvS","newS","hex","splitHexValues","f","p","q","t","YKColor","YKColorPickerPosition","YKColorPickerMode","_YKColorPicker","options","target","representation","_target","_options","cp_overlayWrapper","cp_Wrapper","event","paletteWrapper","palette","cursor","colorSettings","inputsSettings","inputsWrapper","btnSwitch","inputWrapper","inputHEX","labelHEX","inputA","inputB","inputC","inputD","labelA","labelB","labelC","labelD","model","opacitySlider","opacityThumb","hueThumb","hueSlider","c","fireEvent","alpha","hsl","colorPreview","paletteBGColor","hslColor","copyColor","path","svgElement","sliders","sliderWrapper","slider","sliderThumb","colorPreviewWrapper","con","conValue","op","startSelect","endSelect","callEvent","_container","overlayWrapper","parent","_a","e","x","y","paletteHeight","paletteWidth","alphaValue","caret","length","hsl_s","hsl_l","input","err","sliderRect","sliderWidth","thumbX","opacitySliderRect","position","type","closeOnScroll","closeOnResize","clientX","clientY","paletteRect","xAxis","yAxis","positionFallback","targetRect","colorPickerRect","scrollTop","scrollLeft","offset","_position","_stateSpaceInTop","_stateSpaceInBottom","_stateSpaceInLeft","_stateSpaceInRight","states","positions","bestPositions","secondPositions","state","x_axis","y_axis","xScrollbar","yScrollbar","axis","theme","prevTarget","rect","condition1","condition2","boxSize","baseOptions","keys","YKColorPicker"],"mappings":"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"}